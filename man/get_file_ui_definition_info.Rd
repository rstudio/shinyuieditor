% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_file_ui_definition_info.R
\name{get_file_ui_definition_info}
\alias{get_file_ui_definition_info}
\title{Get app ui information from script}
\usage{
get_file_ui_definition_info(file_lines, type = "SINGLE-FILE")
}
\arguments{
\item{file_lines}{Character vector of the lines of the file that defines a
shiny app's ui (as from \code{readLines()}).}

\item{type}{Is the app a SINGLE-FILE app? E.g. app is container entirely in
\code{app.R}? Or is it \code{MULTI-FILE}?}
}
\value{
List with both the \code{type} and \code{file_lines} mirrored from the
arguments of the same name. Along with this the \code{ui_bounds} containing the
start and end lines of the file section that defines the app's ui, the
\code{ui_tree} IR that defines that ui, and \code{loaded_libraries}: libraries loaded
via \code{library()} calls in the script.
}
\description{
Get app ui information from script
}
\examples{

# Note the use of the triple colon, this function is not exported
# shinyuieditor:::get_file_ui_definition_info(...)

# Can handle single-file app.R
app_loc <- system.file(
  "app-templates/geyser/app.R",
  package = "shinyuieditor"
 )
shinyuieditor:::get_file_ui_definition_info(readLines(app_loc), type = "SINGLE-FILE")

# Also handles multi-file apps
app_loc <- system.file("app-templates/geyser_multi-file/ui.R", package = "shinyuieditor")
shinyuieditor:::get_file_ui_definition_info(readLines(app_loc), type = "MULTI-FILE")

}
