/* ../editor/src/Shiny-Ui-Elements/Bslib/BslibCard.module.css */
.card {
  position: relative;
  height: 100%;
  width: 100%;
}

/* ../editor/src/DragAndDropHelpers/DragAndDrop.css */
.can-accept-drop {
  --start-opacity: 0.1;
  --end-opacity: 0.5;
  position: relative;
  background-color: var(--red);
  opacity: 0.2;
  animation-duration: 3s;
  animation-name: pulse;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}
.can-accept-drop::after {
  content: "";
  position: absolute;
  inset: 0;
  text-align: center;
  display: grid;
  place-content: center;
  overflow: hidden;
  color: var(--rstudio-white);
}
@keyframes pulse {
  from {
    opacity: var(--start-opacity);
  }
  50% {
    opacity: var(--end-opacity);
  }
  to {
    opacity: var(--start-opacity);
  }
}
div.can-accept-drop.hovering-over {
  --start-opacity: 1;
  --end-opacity: 1;
  z-index: 10;
}
div.can-accept-drop.hovering-over::after {
  content: "release to add";
}

/* ../editor/src/Shiny-Ui-Elements/Bslib/Utils/styles.module.css */
.card_body {
  position: relative;
  height: 100%;
  width: 100%;
  min-width: 0;
  isolation: isolate;
  position: relative;
  display: flex;
  flex-direction: column;
}
.empty_msg {
  position: absolute;
  display: grid;
  place-content: center;
  inset: 0;
  pointer-events: none;
}
.drop_watcher {
  width: 100%;
  height: 0;
}
.drop_watcher:last-of-type {
  flex-grow: 1;
  height: unset;
}
.drop_watcher:global(.can-accept-drop) {
  color: var(--rstudio-white);
  height: 15px;
}
.missing_card_element:not(:has(:global(.can-accept-drop))) {
  height: 0;
  padding: 0;
  opacity: 0;
  overflow: hidden;
}
.missing_card_element:has(:global(.can-accept-drop)) {
  height: auto;
}
.drop_watcher:global(.can-accept-drop),
.missing_card_element:has(:global(.can-accept-drop)) {
  transition-property: height flex-grow flex;
  transition-duration: 0.1s;
  transition-timing-function: ease-in;
}
.card_body > div:global(.can-accept-drop.hovering-over)::after {
  content: "Add to card body";
}
.card_header > div:global(.can-accept-drop.hovering-over)::after {
  content: "Add to card header";
}
.card_footer > div:global(.can-accept-drop.hovering-over)::after {
  content: "Add to card footer";
}

/* ../editor/src/Shiny-Ui-Elements/Gridlayout/Utils/swapping.module.css */
.hoveringOverSwap,
.availableToSwap {
  --highlight-color: var(--rstudio-blue, pink);
}
div.hoveringOverSwap::before {
  content: "Swap " attr(data-swap-with) " with " attr(data-grid-area);
  position: absolute;
  background-color: var(--highlight-color);
  color: var(--rstudio-white);
  bottom: 100%;
  inset-inline: 20px;
  z-index: 2;
  text-align: center;
  padding-block: 4px;
  pointer-events: none;
}
div.availableToSwap {
  --outline-start-width: 2px;
  --outline-end-width: 5px;
  --start-shadow: inset 0px 0 0px var(--outline-start-width) var(--highlight-color);
  --end-shadow: inset 0px 0 0px var(--outline-end-width) var(--highlight-color);
  opacity: 1;
  box-shadow: var(--start-shadow);
  animation-duration: 3s;
  animation-name: pulse;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}
div.availableToSwap.hoveringOverSwap {
  z-index: 2;
}
@keyframes pulse {
  from {
    box-shadow: var(--start-shadow);
  }
  50% {
    box-shadow: var(--end-shadow);
  }
  to {
    box-shadow: var(--start-shadow);
  }
}
div.emptyGridCard {
  position: absolute;
  inset: 0;
  display: grid;
  place-content: center;
  justify-items: center;
  gap: var(--vertical-spacing);
  z-index: 2;
  pointer-events: none;
}
div.emptyGridCard > button {
  pointer-events: initial;
}
.emptyMessage {
  font-style: italic;
  opacity: 0.5;
}

/* ../editor/src/Shiny-Ui-Elements/Gridlayout/GridlayoutCard/styles.module.css */
.container {
  position: relative;
  height: 100%;
  width: 100%;
  min-width: 0;
  background-color: var(--rstudio-white, white);
  --card-padding: 6px;
  isolation: isolate;
}
.container.withTitle {
  display: grid;
  grid-template-areas: "title" "contentHolder";
  grid-template-rows: min-content minmax(0, 1fr);
}
.panelTitle {
  grid-area: title;
  padding: var(--card-padding) calc(var(--card-padding) * 1.5);
}
.contentHolder {
  grid-area: contentHolder;
  --spacing: var(--item-gap, 1rem);
  position: relative;
  height: 100%;
  width: 100%;
  min-width: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: var(--card-padding);
  overflow: auto;
}
.contentHolder[data-alignment=top] {
  justify-content: top;
}
.contentHolder[data-alignment=center] {
  justify-content: center;
}
.contentHolder[data-alignment=spread] {
  justify-content: space-evenly;
}
.contentHolder[data-alignment=bottom] {
  justify-content: end;
}
.contentHolder > div {
  position: relative;
}
div.dropWatcher {
  height: var(--spacing);
  width: 100%;
  z-index: 2;
}
.contentHolder[data-alignment=top] > div.lastDropWatcher,
.contentHolder[data-alignment=bottom] > div.firstDropWatcher,
.contentHolder[data-alignment=center] > div.firstDropWatcher,
.contentHolder[data-alignment=center] > div.lastDropWatcher,
.contentHolder[data-alignment=spread] > div.lastDropWatcher,
.contentHolder[data-alignment=spread] > div.firstDropWatcher,
.contentHolder[data-alignment=spread] > div.middleDropWatcher,
div.onlyDropWatcher {
  flex-grow: 1;
  height: unset;
}

/* ../editor/src/Shiny-Ui-Elements/ShinyPlotOutput/styles.module.css */
.container {
  max-height: 100%;
}
.plotPlaceholder {
  --pad: 15px;
  --label-height: 30px;
  --plot-offset: calc(2 * var(--pad) + var(--label-height));
  padding: var(--pad);
  height: 100%;
  max-height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  background-color: var(--light-grey);
}
.plotPlaceholder .label {
  height: var(--label-height);
  line-height: var(--label-height);
}
.plotPlaceholder > svg {
  margin-inline: auto;
}

/* ../editor/src/Shiny-Ui-Elements/Gridlayout/GridlayoutGridCardPlot/styles.module.css */
.gridCardPlot {
  background-color: var(--rstudio-white);
  width: 100%;
  height: 100%;
  max-width: 100%;
  max-height: 100%;
  position: relative;
}
.gridCardPlot > h1 {
  font-size: 2rem;
}

/* ../editor/src/components/Icons/styles.module.css */
img.icon {
  height: 30px;
  display: block;
}

/* ../editor/src/Shiny-Ui-Elements/Gridlayout/GridlayoutGridCardText/styles.module.css */
.textPanel {
  background-color: var(--rstudio-white);
  display: grid;
  align-items: center;
  width: 100%;
  height: 100%;
  padding: 1rem;
  position: relative;
}
.textPanel > h1 {
  font-size: 2rem;
}

/* ../editor/src/Shiny-Ui-Elements/Gridlayout/Utils/AreaOverlay.module.css */
.marker {
  font-weight: lighter;
  font-style: italic;
  padding: 2px;
  position: relative;
  pointer-events: none;
  z-index: 1;
}
.marker:hover {
  outline: 2px solid var(--rstudio-blue);
}
.marker:not(:global(.dragging)) {
  grid-area: var(--grid-area);
}
.marker:global(.dragging) {
  pointer-events: all;
  grid-row-start: var(--drag-grid-row-start);
  grid-row-end: var(--drag-grid-row-end);
  grid-column-start: var(--drag-grid-column-start);
  grid-column-end: var(--drag-grid-column-end);
  background-color: var(--rstudio-blue-transparent);
}
.dragger {
  --dragger-short: 12px;
  --dragger-aspect: 2;
  --dragger-long: calc(var(--dragger-short) * var(--dragger-aspect));
  --offset-long: calc(50% - var(--dragger-long) / 2);
  display: grid;
  place-content: center;
  position: absolute;
  opacity: 0.2;
  background-color: var(--rstudio-blue);
  color: var(--rstudio-white);
  pointer-events: auto;
}
.dragger:hover {
  opacity: 1;
}
.dragger.move {
  height: var(--dragger-long);
  width: var(--dragger-long);
  left: var(--offset-long);
  top: var(--offset-long);
  cursor: grab;
}
.dragger:global(.up),
.dragger:global(.down) {
  height: var(--dragger-short);
  width: var(--dragger-long);
  left: var(--offset-long);
  cursor: ns-resize;
}
.dragger:global(.right),
.dragger:global(.left) {
  width: var(--dragger-short);
  height: var(--dragger-long);
  top: var(--offset-long);
  cursor: ew-resize;
}
.dragger:global(.up) {
  top: 0;
}
.dragger:global(.down) {
  bottom: 0;
}
.dragger:global(.right) {
  right: 0;
}
.dragger:global(.left) {
  left: 0;
}

/* ../editor/src/Shiny-Ui-Elements/Gridlayout/Utils/EditableGridContainer/resizableGrid.module.css */
.ResizableGrid {
  --grid-gap: 5px;
  --grid-pad: var(--pad, 10px);
  height: 100%;
  width: 100%;
  min-height: 80px;
  min-width: 400px;
  display: grid;
  padding: var(--grid-pad);
  gap: var(--grid-gap);
  position: relative;
  isolation: isolate;
}
.ResizableGrid > * {
  min-width: 0;
  min-height: 0;
}
div#size-detection-cell {
  width: 100%;
  height: 100%;
  grid-row: 1/-1;
  grid-column: 1/-1;
}

/* ../editor/src/components/PopoverEl/styles.module.css */
.popover {
  pointer-events: none;
  opacity: 0;
  border-radius: var(--corner-radius);
  background-color: var(--rstudio-white);
  filter: drop-shadow(1px 1px 4px hsl(0deg 0% 0% / 0.25));
  padding: 5px;
}
.textContent {
  padding: 5px;
  font-style: italic;
  width: max-content;
  max-width: 200px;
}
.popover[data-show] {
  opacity: 1;
  z-index: 9999;
  transition-property: opacity;
  transition-duration: 10ms;
  transition-timing-function: ease-in;
}
.popperArrow,
.popperArrow::before {
  position: absolute;
  width: 8px;
  height: 8px;
  background: inherit;
}
.popperArrow {
  visibility: hidden;
}
.popperArrow::before {
  visibility: visible;
  content: "";
  transform: rotate(45deg);
}
.popover[data-popper-placement^=top] > .popperArrow {
  bottom: -4px;
}
.popover[data-popper-placement^=bottom] > .popperArrow {
  top: -4px;
}
.popover[data-popper-placement^=left] > .popperArrow {
  right: -4px;
}
.popover[data-popper-placement^=right] > .popperArrow {
  left: -4px;
}
.popoverMarkdown {
  max-width: 300px;
}
.popoverMarkdown p:last-of-type {
  margin-bottom: 0;
}
.popoverMarkdown code {
  font-family: var(--mono-fonts);
}

/* ../editor/src/components/Inputs/CSSUnitInput/CSSUnitInfo.module.css */
.infoIcon {
  width: 24px;
  color: var(--rstudio-blue);
  background-color: transparent;
  font-size: 19px;
  display: grid;
  place-content: center;
}
.container {
  width: min(100%, max-content);
  padding: 4px;
}
.header {
  border-bottom: 1px solid var(--divider-color, pink);
  margin-bottom: 3px;
  padding-bottom: 3px;
}
.info {
  display: grid;
  grid-template-columns: auto auto;
  gap: 4px;
}
.unit {
  text-align: end;
  font-weight: bold;
}
.description {
  font-style: italic;
}

/* ../editor/src/components/Inputs/CSSUnitInput/CSSUnitInput.module.css */
.wrapper {
  position: relative;
  display: flex;
  max-width: 135px;
  padding-block: 2px;
  gap: 2px;
}
.unitSelector {
  --dropdown-width: 13px;
  height: 22px;
  width: 48px;
  text-align: center;
  padding-block: 0px;
  padding-inline: 2px var(--dropdown-width);
  border: 1px solid var(--light-grey);
  border-radius: var(--corner-radius);
  position: relative;
  appearance: none;
  background-color: var(--rstudio-white);
  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2218%22%20height%3D%2210%22%20viewBox%3D%220%200%2018%2010%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M8.87703%209.38397L15.929%202.59828H1.82511L8.87703%209.38397Z%22%20fill%3D%22%2375A8DB%22%2F%3E%3C%2Fsvg%3E%0A);
  background-size: var(--dropdown-width);
  background-repeat: no-repeat;
  background-position: right;
}

/* ../../node_modules/balloon-css/balloon.min.css */
:root {
  --balloon-border-radius: 2px;
  --balloon-color: rgba(16,16,16,0.95);
  --balloon-text-color: #fff;
  --balloon-font-size: 12px;
  --balloon-move: 4px;
}
button[aria-label][data-balloon-pos] {
  overflow: visible;
}
[aria-label][data-balloon-pos] {
  position: relative;
  cursor: pointer;
}
[aria-label][data-balloon-pos]:after {
  opacity: 0;
  pointer-events: none;
  transition: all 0.18s ease-out 0.18s;
  text-indent: 0;
  font-family:
    -apple-system,
    BlinkMacSystemFont,
    "Segoe UI",
    Roboto,
    Oxygen,
    Ubuntu,
    Cantarell,
    "Open Sans",
    "Helvetica Neue",
    sans-serif;
  font-weight: normal;
  font-style: normal;
  text-shadow: none;
  font-size: var(--balloon-font-size);
  background: var(--balloon-color);
  border-radius: 2px;
  color: var(--balloon-text-color);
  border-radius: var(--balloon-border-radius);
  content: attr(aria-label);
  padding: .5em 1em;
  position: absolute;
  white-space: nowrap;
  z-index: 10;
}
[aria-label][data-balloon-pos]:before {
  width: 0;
  height: 0;
  border: 5px solid transparent;
  border-top-color: var(--balloon-color);
  opacity: 0;
  pointer-events: none;
  transition: all 0.18s ease-out 0.18s;
  content: "";
  position: absolute;
  z-index: 10;
}
[aria-label][data-balloon-pos]:hover:before,
[aria-label][data-balloon-pos]:hover:after,
[aria-label][data-balloon-pos][data-balloon-visible]:before,
[aria-label][data-balloon-pos][data-balloon-visible]:after,
[aria-label][data-balloon-pos]:not([data-balloon-nofocus]):focus:before,
[aria-label][data-balloon-pos]:not([data-balloon-nofocus]):focus:after {
  opacity: 1;
  pointer-events: none;
}
[aria-label][data-balloon-pos].font-awesome:after {
  font-family:
    FontAwesome,
    -apple-system,
    BlinkMacSystemFont,
    "Segoe UI",
    Roboto,
    Oxygen,
    Ubuntu,
    Cantarell,
    "Open Sans",
    "Helvetica Neue",
    sans-serif;
}
[aria-label][data-balloon-pos][data-balloon-break]:after {
  white-space: pre;
}
[aria-label][data-balloon-pos][data-balloon-break][data-balloon-length]:after {
  white-space: pre-line;
  word-break: break-word;
}
[aria-label][data-balloon-pos][data-balloon-blunt]:before,
[aria-label][data-balloon-pos][data-balloon-blunt]:after {
  transition: none;
}
[aria-label][data-balloon-pos][data-balloon-pos=up]:hover:after,
[aria-label][data-balloon-pos][data-balloon-pos=up][data-balloon-visible]:after,
[aria-label][data-balloon-pos][data-balloon-pos=down]:hover:after,
[aria-label][data-balloon-pos][data-balloon-pos=down][data-balloon-visible]:after {
  transform: translate(-50%, 0);
}
[aria-label][data-balloon-pos][data-balloon-pos=up]:hover:before,
[aria-label][data-balloon-pos][data-balloon-pos=up][data-balloon-visible]:before,
[aria-label][data-balloon-pos][data-balloon-pos=down]:hover:before,
[aria-label][data-balloon-pos][data-balloon-pos=down][data-balloon-visible]:before {
  transform: translate(-50%, 0);
}
[aria-label][data-balloon-pos][data-balloon-pos*=-left]:after {
  left: 0;
}
[aria-label][data-balloon-pos][data-balloon-pos*=-left]:before {
  left: 5px;
}
[aria-label][data-balloon-pos][data-balloon-pos*=-right]:after {
  right: 0;
}
[aria-label][data-balloon-pos][data-balloon-pos*=-right]:before {
  right: 5px;
}
[aria-label][data-balloon-pos][data-balloon-po*=-left]:hover:after,
[aria-label][data-balloon-pos][data-balloon-po*=-left][data-balloon-visible]:after,
[aria-label][data-balloon-pos][data-balloon-pos*=-right]:hover:after,
[aria-label][data-balloon-pos][data-balloon-pos*=-right][data-balloon-visible]:after {
  transform: translate(0, 0);
}
[aria-label][data-balloon-pos][data-balloon-po*=-left]:hover:before,
[aria-label][data-balloon-pos][data-balloon-po*=-left][data-balloon-visible]:before,
[aria-label][data-balloon-pos][data-balloon-pos*=-right]:hover:before,
[aria-label][data-balloon-pos][data-balloon-pos*=-right][data-balloon-visible]:before {
  transform: translate(0, 0);
}
[aria-label][data-balloon-pos][data-balloon-pos^=up]:before,
[aria-label][data-balloon-pos][data-balloon-pos^=up]:after {
  bottom: 100%;
  transform-origin: top;
  transform: translate(0, var(--balloon-move));
}
[aria-label][data-balloon-pos][data-balloon-pos^=up]:after {
  margin-bottom: 10px;
}
[aria-label][data-balloon-pos][data-balloon-pos=up]:before,
[aria-label][data-balloon-pos][data-balloon-pos=up]:after {
  left: 50%;
  transform: translate(-50%, var(--balloon-move));
}
[aria-label][data-balloon-pos][data-balloon-pos^=down]:before,
[aria-label][data-balloon-pos][data-balloon-pos^=down]:after {
  top: 100%;
  transform: translate(0, calc(var(--balloon-move) * -1));
}
[aria-label][data-balloon-pos][data-balloon-pos^=down]:after {
  margin-top: 10px;
}
[aria-label][data-balloon-pos][data-balloon-pos^=down]:before {
  width: 0;
  height: 0;
  border: 5px solid transparent;
  border-bottom-color: var(--balloon-color);
}
[aria-label][data-balloon-pos][data-balloon-pos=down]:after,
[aria-label][data-balloon-pos][data-balloon-pos=down]:before {
  left: 50%;
  transform: translate(-50%, calc(var(--balloon-move) * -1));
}
[aria-label][data-balloon-pos][data-balloon-pos=left]:hover:after,
[aria-label][data-balloon-pos][data-balloon-pos=left][data-balloon-visible]:after,
[aria-label][data-balloon-pos][data-balloon-pos=right]:hover:after,
[aria-label][data-balloon-pos][data-balloon-pos=right][data-balloon-visible]:after {
  transform: translate(0, -50%);
}
[aria-label][data-balloon-pos][data-balloon-pos=left]:hover:before,
[aria-label][data-balloon-pos][data-balloon-pos=left][data-balloon-visible]:before,
[aria-label][data-balloon-pos][data-balloon-pos=right]:hover:before,
[aria-label][data-balloon-pos][data-balloon-pos=right][data-balloon-visible]:before {
  transform: translate(0, -50%);
}
[aria-label][data-balloon-pos][data-balloon-pos=left]:after,
[aria-label][data-balloon-pos][data-balloon-pos=left]:before {
  right: 100%;
  top: 50%;
  transform: translate(var(--balloon-move), -50%);
}
[aria-label][data-balloon-pos][data-balloon-pos=left]:after {
  margin-right: 10px;
}
[aria-label][data-balloon-pos][data-balloon-pos=left]:before {
  width: 0;
  height: 0;
  border: 5px solid transparent;
  border-left-color: var(--balloon-color);
}
[aria-label][data-balloon-pos][data-balloon-pos=right]:after,
[aria-label][data-balloon-pos][data-balloon-pos=right]:before {
  left: 100%;
  top: 50%;
  transform: translate(calc(var(--balloon-move) * -1), -50%);
}
[aria-label][data-balloon-pos][data-balloon-pos=right]:after {
  margin-left: 10px;
}
[aria-label][data-balloon-pos][data-balloon-pos=right]:before {
  width: 0;
  height: 0;
  border: 5px solid transparent;
  border-right-color: var(--balloon-color);
}
[aria-label][data-balloon-pos][data-balloon-length]:after {
  white-space: normal;
}
[aria-label][data-balloon-pos][data-balloon-length=small]:after {
  width: 80px;
}
[aria-label][data-balloon-pos][data-balloon-length=medium]:after {
  width: 150px;
}
[aria-label][data-balloon-pos][data-balloon-length=large]:after {
  width: 260px;
}
[aria-label][data-balloon-pos][data-balloon-length=xlarge]:after {
  width: 380px;
}
@media screen and (max-width: 768px) {
  [aria-label][data-balloon-pos][data-balloon-length=xlarge]:after {
    width: 90vw;
  }
}
[aria-label][data-balloon-pos][data-balloon-length=fit]:after {
  width: 100%;
}

/* ../editor/src/components/Inputs/Button/Button.module.css */
.button {
  --background-color: var(--rstudio-white);
  --text-color: var(--font-color);
  --outline-color: transparent;
  --outline-width: 1px;
  padding: 0.5rem 1rem;
  border: var(--outline-width) solid var(--outline-color);
  background-color: var(--background-color);
  color: var(--text-color);
  border-radius: var(--corner-radius);
  align-self: center;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
}
.button:disabled {
  --text-color: var(--font-color-disabled);
  cursor: not-allowed;
}
.regular {
  --outline-color: var(--rstudio-blue);
}
.delete {
  --outline-color: var(--red);
}
.icon {
  --outline-width: 0px;
  display: inline-grid;
  place-content: center;
  padding: 8px;
  aspect-ratio: 1;
}
.transparent {
  --outline-color: transparent;
  --background-color: transparent;
}

/* ../editor/src/Shiny-Ui-Elements/Gridlayout/Utils/EditableGridContainer/TractInfoDisplay.module.css */
.tractInfoDisplay {
  --transition-delay: 0.1s;
  --transition-speed: 0.1s;
  --transition-ease: ease-in-out;
  --expand-transition: none;
  --offset: calc(-1 * var(--grid-pad));
  --scale: 0;
  --size-widget-bg-color: hsla(220, 27%, 94%, 0.9);
  --size-widget-spacing: 5px;
  --add-button-diameter: 19px;
  --add-button-color: var(--icon-color);
  --delete-button-height: 20px;
  position: relative;
  z-index: 1;
  isolation: isolate;
  grid-column: 1;
  grid-row: 1;
}
.tractInfoDisplay:focus-within,
.tractInfoDisplay:hover {
  --scale: 100%;
  --expand-transition: transform var(--transition-speed) var(--transition-ease) var(--transition-delay);
  z-index: 3;
}
.tractInfoDisplay[data-drag-dir=rows] {
  grid-row: var(--tract-index);
  margin-left: var(--offset);
  width: fit-content;
}
.tractInfoDisplay[data-drag-dir=cols] {
  grid-column: var(--tract-index);
  margin-top: var(--offset);
  height: fit-content;
}
.sizeWidget {
  position: absolute;
  transition: var(--expand-transition);
  padding: 2px;
  display: flex;
  align-items: center;
  gap: var(--size-widget-spacing);
  background-color: var(--size-widget-bg-color);
  height: 100%;
  width: 100%;
}
.tractInfoDisplay[data-drag-dir=rows] > .sizeWidget {
  width: fit-content;
  border-radius: 0 var(--corner-radius) var(--corner-radius) 0;
  transform: scaleX(var(--scale));
  transform-origin: left;
  padding-right: var(--size-widget-spacing);
}
.cssSizeInput {
  width: 120px;
  display: flex;
}
.tractInfoDisplay[data-drag-dir=cols] > .sizeWidget {
  height: fit-content;
  flex-direction: column;
  border-radius: 0 0 var(--corner-radius) var(--corner-radius);
  transform: scaleY(var(--scale));
  transform-origin: top;
  padding-bottom: var(--size-widget-spacing);
}
.hoverListener {
  position: absolute;
  --thickness: calc(2 * var(--grid-pad));
  --offset: calc(-1 * var(--grid-pad));
  inset: calc(4px - var(--grid-pad));
}
.tractInfoDisplay[data-drag-dir=rows] .hoverListener {
  width: var(--thickness);
  left: var(--offset);
}
.tractInfoDisplay[data-drag-dir=cols] .hoverListener {
  height: var(--thickness);
  top: var(--offset);
}
.buttons {
  display: flex;
  justify-content: space-between;
}
.tractInfoDisplay[data-drag-dir=cols] .buttons {
  width: 100%;
  flex-direction: row;
}
.tractInfoDisplay[data-drag-dir=rows] .buttons {
  height: 100%;
  flex-direction: column;
}
.tractAddButton,
.deleteButton {
  --offset_amnt: 2px;
  --offset: calc(var(--offset_amnt) - var(--add-button-diameter));
  width: var(--add-button-diameter);
  height: var(--add-button-diameter);
  aspect-ratio: 1/1;
  display: grid;
  place-content: center;
  border-radius: 50%;
}
.tractAddButton {
  background-color: var(--add-button-color);
  color: var(--rstudio-white);
}
.deleteButton {
  background-color: transparent;
  font-size: var(--delete-button-height);
}
.deleteButton[data-enabled=true] {
  color: var(--red);
}
.deleteButton[data-enabled=false] {
  color: var(--disabled-color);
  cursor: not-allowed;
}

/* ../editor/src/Shiny-Ui-Elements/Gridlayout/Utils/EditableGridContainer/TractSizer.module.css */
div.columnSizer,
div.rowSizer {
  --sizer-color: #c9e2f3;
  --sizer-expansion-amnt: 1.3;
  --sizer-margin-offset: calc(-1 * var(--grid-gap));
  --sizer-thickness: 2px;
  --sizer-hang-over: 0px;
  --sizer-offset: calc(var(--grid-pad) + var(--sizer-hang-over));
  --sizer-length: calc(100% + var(--sizer-offset) + var(--grid-pad));
  --sizer-main-axis-offset: calc(-1 * var(--sizer-offset));
  --sizer-off-axis-offset: calc(50% - var(--sizer-thickness) / 2);
  z-index: -1;
  background-color: transparent;
  opacity: 1;
  position: relative;
  transition: transform 1s 0.5s;
}
.columnSizer {
  grid-row: 1/-1;
  width: var(--grid-gap);
  margin-left: var(--sizer-margin-offset);
  height: var(--sizer-length);
  cursor: ew-resize;
}
.rowSizer {
  grid-column: 1/-1;
  height: var(--grid-gap);
  margin-top: var(--sizer-margin-offset);
  width: var(--sizer-length);
  cursor: ns-resize;
}
div.columnSizer::after,
div.rowSizer::after {
  content: "";
  position: absolute;
  background-color: var(--sizer-color);
}
div.columnSizer::after {
  height: 100%;
  width: var(--sizer-thickness);
  left: var(--sizer-off-axis-offset);
  top: var(--sizer-main-axis-offset);
}
div.rowSizer::after {
  width: 100%;
  height: var(--sizer-thickness);
  top: var(--sizer-off-axis-offset);
  left: var(--sizer-main-axis-offset);
}
.columnSizer:hover,
.rowSizer:hover {
  transition: transform 0s;
}
.columnSizer:hover {
  transform: scaleX(var(--sizer-expansion-amnt));
}
.rowSizer:hover {
  transform: scaleY(var(--sizer-expansion-amnt));
}

/* ../editor/src/components/Inputs/BooleanInput/styles.module.css */
.checkboxInput {
  height: 0;
  width: 0;
  visibility: hidden;
  position: absolute;
}
label.checkboxLabel {
  --height: 30px;
  --aspect-ratio: 2.8;
  --animation-speed: 0.2s;
  --toggle-inset: 2px;
  --on-color: var(--rstudio-blue, pink);
  --off-color: var(--grey);
  --width: calc(var(--height) * var(--aspect-ratio));
  --toggle-h: calc(var(--height) - var(--toggle-inset) * 2);
  --toggle-w: calc(var(--width) * 0.5);
  font-size: 12px;
  cursor: pointer;
  color: transparent;
  width: var(--width);
  height: var(--height);
  border-radius: var(--corner-radius);
  background: var(--off-color);
  display: block;
  position: relative;
  margin-inline: 4px;
}
label.checkboxLabel:after {
  content: attr(data-value);
  color: var(--dark-grey);
  text-align: center;
  position: absolute;
  display: grid;
  place-content: center;
  top: var(--toggle-inset);
  left: var(--toggle-inset);
  width: var(--toggle-w);
  height: var(--toggle-h);
  border-radius: calc(var(--corner-radius) - var(--toggle-inset));
  background: var(--rstudio-white);
  transition: var(--animation-speed);
}
.checkboxInput:checked + .checkboxLabel {
  background: var(--on-color);
}
.checkboxInput:checked + .checkboxLabel:after {
  left: calc(100% - var(--toggle-inset));
  transform: translateX(-100%);
}
.checkboxLabel:active:after {
  width: calc(var(--toggle-w) * 1.2);
}

/* ../editor/src/components/Inputs/ListInput/styles.module.css */
.container {
  --gap-size: 4px;
  margin-top: 21px;
}
.list {
  width: fit-content;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-block: calc(2 * var(--gap-size));
  --border: 1px solid var(--grey);
}
.item {
  width: 100%;
  display: grid;
  grid-template-columns: 15px 1fr auto 1fr 15px;
  grid-template-areas: "drag key colon value delete";
  gap: var(--gap-size);
  align-items: center;
  padding: var(--gap-size);
}
.item:global(.sortable-chosen) {
  outline: 2px solid var(--rstudio-blue);
}
.keyField {
  grid-area: key;
  min-width: 0;
}
.valueField {
  grid-area: value;
  min-width: 0;
}
.header {
  margin-top: -5px;
  margin-bottom: -5px;
  text-align: center;
}
.dragHandle {
  grid-area: drag;
  cursor: ns-resize;
  transform: translateY(2px);
}
.item svg {
  width: 16px;
}
.deleteButton {
  grid-area: delete;
  --offset: 4px;
  background-color: transparent;
  transform: translate(-2px, -2px);
  outline: none;
}
.addItemButton {
  color: var(--icon-color);
  font-size: 14px;
  padding: 4px;
  transform: translateY(-2px);
}
.separator {
  transform: translateY(-1px);
}
.deleteButton:hover > svg {
  stroke-width: 3;
}

/* ../editor/src/components/Inputs/RadioInputs/RadioInputs.module.css */
.radioContainer {
  display: grid;
  gap: 5px;
  justify-content: space-around;
  align-content: center;
  border: none;
  max-width: 100%;
  min-width: 0;
  grid-template-columns: repeat(auto-fill, minmax(40px, auto));
  padding: 0;
}
.option {
  height: 25px;
  width: 100%;
}
.option > .radioInput {
  display: none;
}
.radioLabel {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 4px 12px;
  border: 1px solid var(--light-grey);
  border-radius: var(--corner-radius);
  background-color: var(--rstudio-white);
  max-height: 105px;
  height: 100%;
  padding: 2px;
  color: var(--rstudio-blue);
  position: relative;
}
.icon {
  height: 100%;
  display: block;
}
.radioLabel svg {
  height: 1.65rem;
  padding: 1px;
  font-size: 1.6rem;
}
.radioInput:checked + .radioLabel {
  outline: 3px solid var(--rstudio-blue);
  outline-offset: -2px;
  font-weight: bold;
}
.radioInput:hover:not(:checked) + .radioLabel {
  outline: 2px solid var(--rstudio-blue);
}
.radioInput:hover + .radioLabel::after,
.radioInput:hover + .radioLabel .icon {
  transition-property: opacity;
  transition-duration: 1.5s;
  transition-delay: 0.15s;
}
.radioInput + .radioLabel::after {
  content: attr(data-name);
  opacity: 0;
  position: absolute;
  pointer-events: none;
}
.radioInput:hover + .radioLabel::after {
  transition-timing-function: ease-in;
  opacity: 1;
}
.radioInput:hover + .radioLabel .icon {
  transition-timing-function: ease-out;
  opacity: 0;
}
.text_only_label {
}

/* ../editor/src/components/PortalModal/PortalModal.module.css */
.portalHolder {
  background-color: rgba(255, 255, 255, 0.735);
  position: absolute;
  inset: 0;
  display: grid;
  place-content: center;
  z-index: 2;
}
.portalModal {
  outline: 1px solid grey;
  width: 450px;
  background-color: var(--rstudio-white);
  display: flex;
  flex-direction: column;
  border-radius: var(--corner-radius);
  overflow: scroll;
}
.title {
  padding: 8px;
}
.body {
  flex-grow: 1;
  padding: 1rem;
}
.portalForm {
  display: flex;
  flex-direction: column;
}
.portalFormInputs {
  flex-grow: 1;
  display: flex;
  justify-content: center;
  flex-direction: column;
}
.portalFormFooter {
  padding-top: 1rem;
  display: flex;
  justify-content: space-around;
}
.validationMsg {
  color: var(--red);
  font-style: italic;
}
.infoText {
  font-style: italic;
}

/* ../editor/src/Shiny-Ui-Elements/Gridlayout/Utils/GridContainerElement/styles.module.css */
.container {
  display: grid;
  outline: var(--outline);
  position: relative;
  height: 100%;
  width: 100%;
}

/* ../editor/src/Shiny-Ui-Elements/ShinyActionButton/styles.module.css */
.container {
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: 1fr;
  place-content: center;
  padding: 5px;
  max-height: 100%;
}

/* ../editor/src/Shiny-Ui-Elements/ShinyCheckboxGroupInput/styles.module.css */
.container {
  position: relative;
  padding: 4px;
}
.container > input {
  width: 100%;
}
.container > label {
  font-weight: 700;
}
.checkbox {
  display: flex;
  align-items: center;
  gap: 4px;
}

/* ../editor/src/Shiny-Ui-Elements/ShinyCheckboxInput/styles.module.css */
.container {
  position: relative;
  padding: 4px;
}
.container > input {
  width: 100%;
}
.label {
  margin-left: 5px;
}

/* ../editor/src/components/Tabs/TabPanel/TabPanel.module.css */
.container {
  height: 100%;
}

/* ../editor/src/components/Tabs/Tabset/Tabset.module.css */
.container {
  position: relative;
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  outline: 1px solid var(--light-grey);
  isolation: isolate;
}
.header {
  --h: 40px;
  background-color: var(--light-grey);
  display: flex;
  height: var(--h);
  flex-shrink: 0;
}
.tabContents {
  flex-grow: 1;
  position: relative;
}
.pageTitle {
  margin: 0;
  padding-inline: 20px;
  line-height: var(--h);
  flex-shrink: 0;
  font-size: 1rem;
  font-weight: bold;
}
.pageTitle:empty {
  display: none;
}
.tabHolder {
  display: flex;
  flex-grow: 1;
  align-items: flex-end;
}
.tab {
  --roundness: 6px;
  padding-inline: 6px;
  padding-block: 2px;
  line-height: 16px;
  text-align: center;
  height: calc(100% - 5px);
  border-radius: var(--roundness) var(--roundness) 0 0;
  background-color: var(--grey);
  display: grid;
  place-content: center;
  cursor: pointer;
  border: var(--selected-outline-width) solid transparent;
}
.tab[data-active-tab=true] {
  background-color: var(--rstudio-white);
  border-bottom-color: var(--rstudio-white);
}
.tab[data-selected-tab=true] {
  border-color: var(--selected-outline-color);
  position: relative;
  z-index: 2;
}
.tab[data-selected-tab=true]::before {
  outline: none;
}
.tab[data-selected-tab=true]::after {
  --s: 6px;
  content: "";
  position: absolute;
  width: 100%;
  height: var(--s);
  background-color: var(--rstudio-white);
  bottom: calc(-1 * var(--s));
}
.tabContents {
  height: 100%;
}
.tabContents[data-active-tab=false] {
  display: none;
}
.newTabDropDetector {
  display: flex;
  align-items: center;
}
.addTabButton {
  display: grid;
  place-content: center;
  height: 100%;
  width: 100%;
  color: var(--rstudio-blue);
}
.tabDropDetector {
  width: var(--baseWidth);
  height: 100%;
  position: relative;
  transition: width 0.1s ease-in-out;
}
.tabDropDetector:global(.can-accept-drop) {
  width: calc(var(--baseWidth) * 2);
}

/* ../editor/src/Shiny-Ui-Elements/ShinyTabPanel/ShinyTabPanel.module.css */
.container {
  position: relative;
  height: 100%;
  width: 100%;
  padding: 5px;
}
.emptyTabPanelDropDetector {
  width: 100%;
  height: 100%;
}

/* ../editor/src/Shiny-Ui-Elements/ShinyNavbarPage/ShinyNavbarPage.module.css */
.noTabsMessage {
  padding: 5px;
}

/* ../editor/src/Shiny-Ui-Elements/ShinyNumericInput/styles.module.css */
.container {
  position: relative;
  padding: 4px;
}
.container > input {
  width: 100%;
}

/* ../editor/src/Shiny-Ui-Elements/ShinyRadioButtons/styles.module.css */
.container {
  position: relative;
  padding: 4px;
}
.container > input {
  width: 100%;
}
.container > label {
  font-weight: 700;
}

/* ../editor/src/Shiny-Ui-Elements/ShinySelectInput/styles.module.css */
.container {
  position: relative;
  padding: 4px;
}
.container > input {
  width: 100%;
}
.container > label {
  font-weight: 700;
}
.container > select {
  display: block;
  width: 100%;
  height: 40px;
}

/* ../editor/src/Shiny-Ui-Elements/ShinySliderInput/styles.module.css */
.container {
  padding: 6px;
  --tract-thickness: 12px;
  --handle-diameter: 17px;
  --tract-color: var(--rstudio-blue);
  --handle-color: var(--light-grey);
  --handle-outline: 1px solid var(--grey);
}
.sliderWrapper {
  padding-top: var(--tract-thickness);
  padding-right: 3px;
}
input[type=range].sliderInput {
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  height: var(--tract-thickness);
  background-color: var(--tract-color);
  padding: 0;
  margin-top: 15px;
  position: relative;
  border-radius: var(--tract-thickness);
}
input[type=range].sliderInput::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: var(--handle-diameter);
  height: var(--handle-diameter);
  border-radius: 50%;
  background: var(--handle-color);
  outline: var(--handle-outline);
  cursor: pointer;
}
.sliderInput::before,
.sliderInput::after {
  position: absolute;
  bottom: calc(50% + var(--handle-diameter) / 2 + 2px);
  background-color: var(--light-grey);
  padding-inline: 4px;
  padding-block: 2px;
  font-size: 12px;
  border-radius: 2px;
}
.sliderInput::before {
  content: attr(data-min);
  left: 0;
}
.sliderInput::after {
  content: attr(data-max);
  right: 0;
}

/* ../editor/src/Shiny-Ui-Elements/ShinyTextInput/styles.module.css */
.container {
  position: relative;
  padding: 4px;
}
.container > input {
  width: 100%;
}

/* ../editor/src/Shiny-Ui-Elements/ShinyTextOutput/styles.module.css */
.container {
  padding: 1rem;
  max-height: 100%;
  background-color: var(--light-grey);
  border-radius: var(--corner-radius);
}

/* ../editor/src/Shiny-Ui-Elements/ShinyUiOutput/styles.module.css */
.container {
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: 1fr;
  place-content: center;
  padding: 1rem;
  max-height: 100%;
  min-height: 200px;
  background-color: var(--light-grey);
  border-radius: var(--corner-radius);
}

/* ../editor/src/Shiny-Ui-Elements/TextNode/styles.module.css */
.wrapper {
  position: relative;
  display: inline-block;
}
.wrapper[data-decoration=italic] {
  font-style: italic;
}
.wrapper[data-decoration=bold] {
  font-weight: bold;
}

/* ../editor/src/components/CategoryDivider/styles.module.css */
.categoryDivider {
  display: block;
  position: relative;
  isolation: isolate;
  height: var(--vertical-spacing);
  display: flex;
  align-items: center;
}
.categoryDivider > * {
  background-color: var(--light-grey);
}
.categoryDivider::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  height: 1px;
  background-color: var(--divider-color);
  z-index: -1;
  opacity: 0.5;
}
/*# sourceMappingURL=extension.css.map */
