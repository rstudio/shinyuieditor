{
  "version": 3,
  "sources": ["../../../node_modules/winreg/lib/registry.js", "../src/extension.ts", "../../communication-types/src/index.ts", "../../../node_modules/just-debounce-it/index.mjs", "../src/shinyuieditor_extension.ts", "../src/string-utils.ts", "../src/R-Utils/generateUpdatedUiCode.ts", "../src/R-Utils/parseAppFile.ts", "../src/R-Utils/runRCommand.ts", "../src/R-Utils/startRProcess.ts", "../src/R-Utils/setupRConnection.ts", "../src/R-Utils/startBackgroundRProcess.ts", "../src/R-Utils/startPreviewApp.ts", "../src/R-Utils/getFreePort.ts", "../src/util.ts"],
  "sourcesContent": ["/************************************************************************************************************\r\n * registry.js - contains a wrapper for the REG command under Windows, which provides access to the registry\r\n *\r\n * @author Paul Bottin a/k/a FrEsC\r\n *\r\n */\r\n\r\n/* imports */\r\nvar util          = require('util')\r\n,   path          = require('path')\r\n,   spawn         = require('child_process').spawn\r\n\r\n/* set to console.log for debugging */\r\n,   log           = function () {}\r\n\r\n/* registry hive ids */\r\n,   HKLM          = 'HKLM'\r\n,   HKCU          = 'HKCU'\r\n,   HKCR          = 'HKCR'\r\n,   HKU           = 'HKU'\r\n,   HKCC          = 'HKCC'\r\n,   HIVES         = [ HKLM, HKCU, HKCR, HKU, HKCC ]\r\n\r\n/* registry value type ids */\r\n,   REG_SZ        = 'REG_SZ'\r\n,   REG_MULTI_SZ  = 'REG_MULTI_SZ'\r\n,   REG_EXPAND_SZ = 'REG_EXPAND_SZ'\r\n,   REG_DWORD     = 'REG_DWORD'\r\n,   REG_QWORD     = 'REG_QWORD'\r\n,   REG_BINARY    = 'REG_BINARY'\r\n,   REG_NONE      = 'REG_NONE'\r\n,   REG_TYPES     = [ REG_SZ, REG_MULTI_SZ, REG_EXPAND_SZ, REG_DWORD, REG_QWORD, REG_BINARY, REG_NONE ]\r\n\r\n/* default registry value name */\r\n,   DEFAULT_VALUE = ''\r\n\r\n/* general key pattern */\r\n,   KEY_PATTERN   = /(\\\\[a-zA-Z0-9_\\s]+)*/\r\n\r\n/* key path pattern (as returned by REG-cli) */\r\n,   PATH_PATTERN  = /^(HKEY_LOCAL_MACHINE|HKEY_CURRENT_USER|HKEY_CLASSES_ROOT|HKEY_USERS|HKEY_CURRENT_CONFIG)(.*)$/\r\n\r\n/* registry item pattern */\r\n,   ITEM_PATTERN  = /^(.*)\\s(REG_SZ|REG_MULTI_SZ|REG_EXPAND_SZ|REG_DWORD|REG_QWORD|REG_BINARY|REG_NONE)\\s+([^\\s].*)$/\r\n\r\n/**\r\n * Creates an Error object that contains the exit code of the REG.EXE process.\r\n * This contructor is private. Objects of this type are created internally and returned in the <code>err</code> parameters in case the REG.EXE process doesn't exit cleanly.\r\n *\r\n * @private\r\n * @class\r\n *\r\n * @param {string} message - the error message\r\n * @param {number} code - the process exit code\r\n *\r\n */\r\nfunction ProcessUncleanExitError(message, code) {\r\n  if (!(this instanceof ProcessUncleanExitError))\r\n    return new ProcessUncleanExitError(message, code);\r\n\r\n  Error.captureStackTrace(this, ProcessUncleanExitError);\r\n\r\n  /**\r\n   * The error name.\r\n   * @readonly\r\n   * @member {string} ProcessUncleanExitError#name\r\n   */\r\n  this.__defineGetter__('name', function () { return ProcessUncleanExitError.name; });\r\n\r\n  /**\r\n   * The error message.\r\n   * @readonly\r\n   * @member {string} ProcessUncleanExitError#message\r\n   */\r\n  this.__defineGetter__('message', function () { return message; });\r\n\r\n  /**\r\n   * The process exit code.\r\n   * @readonly\r\n   * @member {number} ProcessUncleanExitError#code\r\n   */\r\n  this.__defineGetter__('code', function () { return code; });\r\n\r\n}\r\n\r\nutil.inherits(ProcessUncleanExitError, Error);\r\n\r\n/*\r\n * Captures stdout/stderr for a child process\r\n */\r\nfunction captureOutput(child) {\r\n  // Use a mutable data structure so we can append as we get new data and have\r\n  // the calling context see the new data\r\n  var output = {'stdout': '', 'stderr': ''};\r\n\r\n  child.stdout.on('data', function(data) { output[\"stdout\"] += data.toString(); });\r\n  child.stderr.on('data', function(data) { output[\"stderr\"] += data.toString(); });\r\n\r\n  return output;\r\n}\r\n\r\n\r\n/*\r\n * Returns an error message containing the stdout/stderr of the child process\r\n */\r\nfunction mkErrorMsg(registryCommand, code, output) {\r\n    var stdout = output['stdout'].trim();\r\n    var stderr = output['stderr'].trim();\r\n\r\n    var msg = util.format(\"%s command exited with code %d:\\n%s\\n%s\", registryCommand, code, stdout, stderr);\r\n    return new ProcessUncleanExitError(msg, code);\r\n}\r\n\r\n\r\n/*\r\n * Converts x86/x64 to 32/64\r\n */\r\nfunction convertArchString(archString) {\r\n  if (archString == 'x64') {\r\n    return '64';\r\n  } else if (archString == 'x86') {\r\n    return '32';\r\n  } else {\r\n    throw new Error('illegal architecture: ' + archString + ' (use x86 or x64)');\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Adds correct architecture to reg args\r\n */\r\nfunction pushArch(args, arch) {\r\n  if (arch) {\r\n    args.push('/reg:' + convertArchString(arch));\r\n  }\r\n}\r\n\r\n/*\r\n * Get the path to system's reg.exe. Useful when another reg.exe is added to the PATH\r\n * Implemented only for Windows\r\n */\r\nfunction getRegExePath() {\r\n    if (process.platform === 'win32') {\r\n        return path.join(process.env.windir, 'system32', 'reg.exe');\r\n    } else {\r\n        return \"REG\";\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Creates a single registry value record.\r\n * This contructor is private. Objects of this type are created internally and returned by methods of {@link Registry} objects.\r\n *\r\n * @private\r\n * @class\r\n *\r\n * @param {string} host - the hostname\r\n * @param {string} hive - the hive id\r\n * @param {string} key - the registry key\r\n * @param {string} name - the value name\r\n * @param {string} type - the value type\r\n * @param {string} value - the value\r\n * @param {string} arch - the hive architecture ('x86' or 'x64')\r\n *\r\n */\r\nfunction RegistryItem (host, hive, key, name, type, value, arch) {\r\n\r\n  if (!(this instanceof RegistryItem))\r\n    return new RegistryItem(host, hive, key, name, type, value, arch);\r\n\r\n  /* private members */\r\n  var _host = host    // hostname\r\n  ,   _hive = hive    // registry hive\r\n  ,   _key = key      // registry key\r\n  ,   _name = name    // property name\r\n  ,   _type = type    // property type\r\n  ,   _value = value  // property value\r\n  ,   _arch = arch    // hive architecture\r\n\r\n  /* getters/setters */\r\n\r\n  /**\r\n   * The hostname.\r\n   * @readonly\r\n   * @member {string} RegistryItem#host\r\n   */\r\n  this.__defineGetter__('host', function () { return _host; });\r\n\r\n  /**\r\n   * The hive id.\r\n   * @readonly\r\n   * @member {string} RegistryItem#hive\r\n   */\r\n  this.__defineGetter__('hive', function () { return _hive; });\r\n\r\n  /**\r\n   * The registry key.\r\n   * @readonly\r\n   * @member {string} RegistryItem#key\r\n   */\r\n  this.__defineGetter__('key', function () { return _key; });\r\n\r\n  /**\r\n   * The value name.\r\n   * @readonly\r\n   * @member {string} RegistryItem#name\r\n   */\r\n  this.__defineGetter__('name', function () { return _name; });\r\n\r\n  /**\r\n   * The value type.\r\n   * @readonly\r\n   * @member {string} RegistryItem#type\r\n   */\r\n  this.__defineGetter__('type', function () { return _type; });\r\n\r\n  /**\r\n   * The value.\r\n   * @readonly\r\n   * @member {string} RegistryItem#value\r\n   */\r\n  this.__defineGetter__('value', function () { return _value; });\r\n\r\n  /**\r\n   * The hive architecture.\r\n   * @readonly\r\n   * @member {string} RegistryItem#arch\r\n   */\r\n  this.__defineGetter__('arch', function () { return _arch; });\r\n\r\n}\r\n\r\nutil.inherits(RegistryItem, Object);\r\n\r\n/**\r\n * Creates a registry object, which provides access to a single registry key.\r\n * Note: This class is returned by a call to ```require('winreg')```.\r\n *\r\n * @public\r\n * @class\r\n *\r\n * @param {object} options - the options\r\n * @param {string=} options.host - the hostname\r\n * @param {string=} options.hive - the hive id\r\n * @param {string=} options.key - the registry key\r\n * @param {string=} options.arch - the optional registry hive architecture ('x86' or 'x64'; only valid on Windows 64 Bit Operating Systems)\r\n *\r\n * @example\r\n * var Registry = require('winreg')\r\n * ,   autoStartCurrentUser = new Registry({\r\n *       hive: Registry.HKCU,\r\n *       key:  '\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run'\r\n *     });\r\n *\r\n */\r\nfunction Registry (options) {\r\n\r\n  if (!(this instanceof Registry))\r\n    return new Registry(options);\r\n\r\n  /* private members */\r\n  var _options = options || {}\r\n  ,   _host = '' + (_options.host || '')    // hostname\r\n  ,   _hive = '' + (_options.hive || HKLM)  // registry hive\r\n  ,   _key  = '' + (_options.key  || '')    // registry key\r\n  ,   _arch = _options.arch || null         // hive architecture\r\n\r\n  /* getters/setters */\r\n\r\n  /**\r\n   * The hostname.\r\n   * @readonly\r\n   * @member {string} Registry#host\r\n   */\r\n  this.__defineGetter__('host', function () { return _host; });\r\n\r\n  /**\r\n   * The hive id.\r\n   * @readonly\r\n   * @member {string} Registry#hive\r\n   */\r\n  this.__defineGetter__('hive', function () { return _hive; });\r\n\r\n  /**\r\n   * The registry key name.\r\n   * @readonly\r\n   * @member {string} Registry#key\r\n   */\r\n  this.__defineGetter__('key', function () { return _key; });\r\n\r\n  /**\r\n   * The full path to the registry key.\r\n   * @readonly\r\n   * @member {string} Registry#path\r\n   */\r\n  this.__defineGetter__('path', function () { return (_host.length == 0 ? '' : '\\\\\\\\' + _host + '\\\\') + _hive + _key; });\r\n\r\n  /**\r\n   * The registry hive architecture ('x86' or 'x64').\r\n   * @readonly\r\n   * @member {string} Registry#arch\r\n   */\r\n  this.__defineGetter__('arch', function () { return _arch; });\r\n\r\n  /**\r\n   * Creates a new {@link Registry} instance that points to the parent registry key.\r\n   * @readonly\r\n   * @member {Registry} Registry#parent\r\n   */\r\n  this.__defineGetter__('parent', function () {\r\n    var i = _key.lastIndexOf('\\\\')\r\n    return new Registry({\r\n      host: this.host,\r\n      hive: this.hive,\r\n      key:  (i == -1)?'':_key.substring(0, i),\r\n      arch: this.arch\r\n    });\r\n  });\r\n\r\n  // validate options...\r\n  if (HIVES.indexOf(_hive) == -1)\r\n    throw new Error('illegal hive specified.');\r\n\r\n  if (!KEY_PATTERN.test(_key))\r\n    throw new Error('illegal key specified.');\r\n\r\n  if (_arch && _arch != 'x64' && _arch != 'x86')\r\n    throw new Error('illegal architecture specified (use x86 or x64)');\r\n\r\n}\r\n\r\n/**\r\n * Registry hive key HKEY_LOCAL_MACHINE.\r\n * Note: For writing to this hive your program has to run with admin privileges.\r\n * @type {string}\r\n */\r\nRegistry.HKLM = HKLM;\r\n\r\n/**\r\n * Registry hive key HKEY_CURRENT_USER.\r\n * @type {string}\r\n */\r\nRegistry.HKCU = HKCU;\r\n\r\n/**\r\n * Registry hive key HKEY_CLASSES_ROOT.\r\n * Note: For writing to this hive your program has to run with admin privileges.\r\n * @type {string}\r\n */\r\nRegistry.HKCR = HKCR;\r\n\r\n/**\r\n * Registry hive key HKEY_USERS.\r\n * Note: For writing to this hive your program has to run with admin privileges.\r\n * @type {string}\r\n */\r\nRegistry.HKU = HKU;\r\n\r\n/**\r\n * Registry hive key HKEY_CURRENT_CONFIG.\r\n * Note: For writing to this hive your program has to run with admin privileges.\r\n * @type {string}\r\n */\r\nRegistry.HKCC = HKCC;\r\n\r\n/**\r\n * Collection of available registry hive keys.\r\n * @type {array}\r\n */\r\nRegistry.HIVES = HIVES;\r\n\r\n/**\r\n * Registry value type STRING.\r\n * @type {string}\r\n */\r\nRegistry.REG_SZ = REG_SZ;\r\n\r\n/**\r\n * Registry value type MULTILINE_STRING.\r\n * @type {string}\r\n */\r\nRegistry.REG_MULTI_SZ = REG_MULTI_SZ;\r\n\r\n/**\r\n * Registry value type EXPANDABLE_STRING.\r\n * @type {string}\r\n */\r\nRegistry.REG_EXPAND_SZ = REG_EXPAND_SZ;\r\n\r\n/**\r\n * Registry value type DOUBLE_WORD.\r\n * @type {string}\r\n */\r\nRegistry.REG_DWORD = REG_DWORD;\r\n\r\n/**\r\n * Registry value type QUAD_WORD.\r\n * @type {string}\r\n */\r\nRegistry.REG_QWORD = REG_QWORD;\r\n\r\n/**\r\n * Registry value type BINARY.\r\n * @type {string}\r\n */\r\nRegistry.REG_BINARY = REG_BINARY;\r\n\r\n/**\r\n * Registry value type UNKNOWN.\r\n * @type {string}\r\n */\r\nRegistry.REG_NONE = REG_NONE;\r\n\r\n/**\r\n * Collection of available registry value types.\r\n * @type {array}\r\n */\r\nRegistry.REG_TYPES = REG_TYPES;\r\n\r\n/**\r\n * The name of the default value. May be used instead of the empty string literal for better readability.\r\n * @type {string}\r\n */\r\nRegistry.DEFAULT_VALUE = DEFAULT_VALUE;\r\n\r\n/**\r\n * Retrieve all values from this registry key.\r\n * @param {valuesCallback} cb - callback function\r\n * @param {ProcessUncleanExitError=} cb.err - error object or null if successful\r\n * @param {array=} cb.items - an array of {@link RegistryItem} objects\r\n * @returns {Registry} this registry key object\r\n */\r\nRegistry.prototype.values = function values (cb) {\r\n\r\n  if (typeof cb !== 'function')\r\n    throw new TypeError('must specify a callback');\r\n\r\n  var args = [ 'QUERY', this.path ];\r\n\r\n  pushArch(args, this.arch);\r\n\r\n  var proc = spawn(getRegExePath(), args, {\r\n        cwd: undefined,\r\n        env: process.env,\r\n        stdio: [ 'ignore', 'pipe', 'pipe' ]\r\n      })\r\n  ,   buffer = ''\r\n  ,   self = this\r\n  ,   error = null // null means no error previously reported.\r\n\r\n  var output = captureOutput(proc);\r\n\r\n  proc.on('close', function (code) {\r\n    if (error) {\r\n      return;\r\n    } else if (code !== 0) {\r\n      log('process exited with code ' + code);\r\n      cb(mkErrorMsg('QUERY', code, output), null);\r\n    } else {\r\n      var items = []\r\n      ,   result = []\r\n      ,   lines = buffer.split('\\n')\r\n      ,   lineNumber = 0\r\n\r\n      for (var i = 0, l = lines.length; i < l; i++) {\r\n        var line = lines[i].trim();\r\n        if (line.length > 0) {\r\n          log(line);\r\n          if (lineNumber != 0) {\r\n            items.push(line);\r\n          }\r\n          ++lineNumber;\r\n        }\r\n      }\r\n\r\n      for (var i = 0, l = items.length; i < l; i++) {\r\n\r\n        var match = ITEM_PATTERN.exec(items[i])\r\n        ,   name\r\n        ,   type\r\n        ,   value\r\n\r\n        if (match) {\r\n          name = match[1].trim();\r\n          type = match[2].trim();\r\n          value = match[3];\r\n          result.push(new RegistryItem(self.host, self.hive, self.key, name, type, value, self.arch));\r\n        }\r\n      }\r\n\r\n      cb(null, result);\r\n\r\n    }\r\n  });\r\n\r\n  proc.stdout.on('data', function (data) {\r\n    buffer += data.toString();\r\n  });\r\n\r\n  proc.on('error', function(err) {\r\n    error = err;\r\n    cb(err);\r\n  });\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Retrieve all subkeys from this registry key.\r\n * @param {function (err, items)} cb - callback function\r\n * @param {ProcessUncleanExitError=} cb.err - error object or null if successful\r\n * @param {array=} cb.items - an array of {@link Registry} objects\r\n * @returns {Registry} this registry key object\r\n */\r\nRegistry.prototype.keys = function keys (cb) {\r\n\r\n  if (typeof cb !== 'function')\r\n    throw new TypeError('must specify a callback');\r\n\r\n  var args = [ 'QUERY', this.path ];\r\n\r\n  pushArch(args, this.arch);\r\n\r\n  var proc = spawn(getRegExePath(), args, {\r\n        cwd: undefined,\r\n        env: process.env,\r\n        stdio: [ 'ignore', 'pipe', 'pipe' ]\r\n      })\r\n  ,   buffer = ''\r\n  ,   self = this\r\n  ,   error = null // null means no error previously reported.\r\n\r\n  var output = captureOutput(proc);\r\n\r\n  proc.on('close', function (code) {\r\n    if (error) {\r\n      return;\r\n    } else if (code !== 0) {\r\n      log('process exited with code ' + code);\r\n      cb(mkErrorMsg('QUERY', code, output), null);\r\n    }\r\n  });\r\n\r\n  proc.stdout.on('data', function (data) {\r\n    buffer += data.toString();\r\n  });\r\n\r\n  proc.stdout.on('end', function () {\r\n\r\n    var items = []\r\n    ,   result = []\r\n    ,   lines = buffer.split('\\n')\r\n\r\n    for (var i = 0, l = lines.length; i < l; i++) {\r\n      var line = lines[i].trim();\r\n      if (line.length > 0) {\r\n        log(line);\r\n        items.push(line);\r\n      }\r\n    }\r\n\r\n    for (var i = 0, l = items.length; i < l; i++) {\r\n\r\n      var match = PATH_PATTERN.exec(items[i])\r\n      ,   hive\r\n      ,   key\r\n\r\n      if (match) {\r\n        hive = match[1];\r\n        key  = match[2];\r\n        if (key && (key !== self.key)) {\r\n          result.push(new Registry({\r\n            host: self.host,\r\n            hive: self.hive,\r\n            key:  key,\r\n            arch: self.arch\r\n          }));\r\n        }\r\n      }\r\n    }\r\n\r\n    cb(null, result);\r\n\r\n  });\r\n\r\n  proc.on('error', function(err) {\r\n    error = err;\r\n    cb(err);\r\n  });\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Gets a named value from this registry key.\r\n * @param {string} name - the value name, use {@link Registry.DEFAULT_VALUE} or an empty string for the default value\r\n * @param {function (err, item)} cb - callback function\r\n * @param {ProcessUncleanExitError=} cb.err - error object or null if successful\r\n * @param {RegistryItem=} cb.item - the retrieved registry item\r\n * @returns {Registry} this registry key object\r\n */\r\nRegistry.prototype.get = function get (name, cb) {\r\n\r\n  if (typeof cb !== 'function')\r\n    throw new TypeError('must specify a callback');\r\n\r\n  var args = ['QUERY', this.path];\r\n  if (name == '')\r\n    args.push('/ve');\r\n  else\r\n    args = args.concat(['/v', name]);\r\n\r\n  pushArch(args, this.arch);\r\n\r\n  var proc = spawn(getRegExePath(), args, {\r\n        cwd: undefined,\r\n        env: process.env,\r\n        stdio: [ 'ignore', 'pipe', 'pipe' ]\r\n      })\r\n  ,   buffer = ''\r\n  ,   self = this\r\n  ,   error = null // null means no error previously reported.\r\n\r\n  var output = captureOutput(proc);\r\n\r\n  proc.on('close', function (code) {\r\n    if (error) {\r\n      return;\r\n    } else if (code !== 0) {\r\n      log('process exited with code ' + code);\r\n      cb(mkErrorMsg('QUERY', code, output), null);\r\n    } else {\r\n      var items = []\r\n      ,   result = null\r\n      ,   lines = buffer.split('\\n')\r\n      ,   lineNumber = 0\r\n\r\n      for (var i = 0, l = lines.length; i < l; i++) {\r\n        var line = lines[i].trim();\r\n        if (line.length > 0) {\r\n          log(line);\r\n          if (lineNumber != 0) {\r\n             items.push(line);\r\n          }\r\n          ++lineNumber;\r\n        }\r\n      }\r\n\r\n      //Get last item - so it works in XP where REG QUERY returns with a header\r\n      var item = items[items.length-1] || ''\r\n      ,   match = ITEM_PATTERN.exec(item)\r\n      ,   name\r\n      ,   type\r\n      ,   value\r\n\r\n      if (match) {\r\n        name = match[1].trim();\r\n        type = match[2].trim();\r\n        value = match[3];\r\n        result = new RegistryItem(self.host, self.hive, self.key, name, type, value, self.arch);\r\n      }\r\n\r\n      cb(null, result);\r\n    }\r\n  });\r\n\r\n  proc.stdout.on('data', function (data) {\r\n    buffer += data.toString();\r\n  });\r\n\r\n  proc.on('error', function(err) {\r\n    error = err;\r\n    cb(err);\r\n  });\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets a named value in this registry key, overwriting an already existing value.\r\n * @param {string} name - the value name, use {@link Registry.DEFAULT_VALUE} or an empty string for the default value\r\n * @param {string} type - the value type\r\n * @param {string} value - the value\r\n * @param {function (err)} cb - callback function\r\n * @param {ProcessUncleanExitError=} cb.err - error object or null if successful\r\n * @returns {Registry} this registry key object\r\n */\r\nRegistry.prototype.set = function set (name, type, value, cb) {\r\n\r\n  if (typeof cb !== 'function')\r\n    throw new TypeError('must specify a callback');\r\n\r\n  if (REG_TYPES.indexOf(type) == -1)\r\n    throw Error('illegal type specified.');\r\n\r\n  var args = ['ADD', this.path];\r\n  if (name == '')\r\n    args.push('/ve');\r\n  else\r\n    args = args.concat(['/v', name]);\r\n\r\n  args = args.concat(['/t', type, '/d', value, '/f']);\r\n\r\n  pushArch(args, this.arch);\r\n\r\n  var proc = spawn(getRegExePath(), args, {\r\n        cwd: undefined,\r\n        env: process.env,\r\n        stdio: [ 'ignore', 'pipe', 'pipe' ]\r\n      })\r\n  ,   error = null // null means no error previously reported.\r\n\r\n  var output = captureOutput(proc);\r\n\r\n  proc.on('close', function (code) {\r\n    if(error) {\r\n      return;\r\n    } else if (code !== 0) {\r\n      log('process exited with code ' + code);\r\n      cb(mkErrorMsg('ADD', code, output, null));\r\n    } else {\r\n      cb(null);\r\n    }\r\n  });\r\n\r\n  proc.stdout.on('data', function (data) {\r\n    // simply discard output\r\n    log(''+data);\r\n  });\r\n\r\n  proc.on('error', function(err) {\r\n    error = err;\r\n    cb(err);\r\n  });\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove a named value from this registry key. If name is empty, sets the default value of this key.\r\n * Note: This key must be already existing.\r\n * @param {string} name - the value name, use {@link Registry.DEFAULT_VALUE} or an empty string for the default value\r\n * @param {function (err)} cb - callback function\r\n * @param {ProcessUncleanExitError=} cb.err - error object or null if successful\r\n * @returns {Registry} this registry key object\r\n */\r\nRegistry.prototype.remove = function remove (name, cb) {\r\n\r\n  if (typeof cb !== 'function')\r\n    throw new TypeError('must specify a callback');\r\n\r\n  var args = name ? ['DELETE', this.path, '/f', '/v', name] : ['DELETE', this.path, '/f', '/ve'];\r\n\r\n  pushArch(args, this.arch);\r\n\r\n  var proc = spawn(getRegExePath(), args, {\r\n        cwd: undefined,\r\n        env: process.env,\r\n        stdio: [ 'ignore', 'pipe', 'pipe' ]\r\n      })\r\n  ,   error = null // null means no error previously reported.\r\n\r\n  var output = captureOutput(proc);\r\n\r\n  proc.on('close', function (code) {\r\n    if(error) {\r\n      return;\r\n    } else if (code !== 0) {\r\n      log('process exited with code ' + code);\r\n      cb(mkErrorMsg('DELETE', code, output), null);\r\n    } else {\r\n      cb(null);\r\n    }\r\n  });\r\n\r\n  proc.stdout.on('data', function (data) {\r\n    // simply discard output\r\n    log(''+data);\r\n  });\r\n\r\n  proc.on('error', function(err) {\r\n    error = err;\r\n    cb(err);\r\n  });\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all subkeys and values (including the default value) from this registry key.\r\n * @param {function (err)} cb - callback function\r\n * @param {ProcessUncleanExitError=} cb.err - error object or null if successful\r\n * @returns {Registry} this registry key object\r\n */\r\nRegistry.prototype.clear = function clear (cb) {\r\n\r\n  if (typeof cb !== 'function')\r\n    throw new TypeError('must specify a callback');\r\n\r\n  var args = ['DELETE', this.path, '/f', '/va'];\r\n\r\n  pushArch(args, this.arch);\r\n\r\n  var proc = spawn(getRegExePath(), args, {\r\n        cwd: undefined,\r\n        env: process.env,\r\n        stdio: [ 'ignore', 'pipe', 'pipe' ]\r\n      })\r\n  ,   error = null // null means no error previously reported.\r\n\r\n  var output = captureOutput(proc);\r\n\r\n  proc.on('close', function (code) {\r\n    if(error) {\r\n      return;\r\n    } else if (code !== 0) {\r\n      log('process exited with code ' + code);\r\n      cb(mkErrorMsg(\"DELETE\", code, output), null);\r\n    } else {\r\n      cb(null);\r\n    }\r\n  });\r\n\r\n  proc.stdout.on('data', function (data) {\r\n    // simply discard output\r\n    log(''+data);\r\n  });\r\n\r\n  proc.on('error', function(err) {\r\n    error = err;\r\n    cb(err);\r\n  });\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Alias for the clear method to keep it backward compatible.\r\n * @method\r\n * @deprecated Use {@link Registry#clear} or {@link Registry#destroy} in favour of this method.\r\n * @param {function (err)} cb - callback function\r\n * @param {ProcessUncleanExitError=} cb.err - error object or null if successful\r\n * @returns {Registry} this registry key object\r\n */\r\nRegistry.prototype.erase = Registry.prototype.clear;\r\n\r\n/**\r\n * Delete this key and all subkeys from the registry.\r\n * @param {function (err)} cb - callback function\r\n * @param {ProcessUncleanExitError=} cb.err - error object or null if successful\r\n * @returns {Registry} this registry key object\r\n */\r\nRegistry.prototype.destroy = function destroy (cb) {\r\n\r\n  if (typeof cb !== 'function')\r\n    throw new TypeError('must specify a callback');\r\n\r\n  var args = ['DELETE', this.path, '/f'];\r\n\r\n  pushArch(args, this.arch);\r\n\r\n  var proc = spawn(getRegExePath(), args, {\r\n        cwd: undefined,\r\n        env: process.env,\r\n        stdio: [ 'ignore', 'pipe', 'pipe' ]\r\n      })\r\n  ,   error = null // null means no error previously reported.\r\n\r\n  var output = captureOutput(proc);\r\n\r\n  proc.on('close', function (code) {\r\n    if (error) {\r\n      return;\r\n    } else if (code !== 0) {\r\n      log('process exited with code ' + code);\r\n      cb(mkErrorMsg('DELETE', code, output), null);\r\n    } else {\r\n      cb(null);\r\n    }\r\n  });\r\n\r\n  proc.stdout.on('data', function (data) {\r\n    // simply discard output\r\n    log(''+data);\r\n  });\r\n\r\n  proc.on('error', function(err) {\r\n    error = err;\r\n    cb(err);\r\n  });\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Create this registry key. Note that this is a no-op if the key already exists.\r\n * @param {function (err)} cb - callback function\r\n * @param {ProcessUncleanExitError=} cb.err - error object or null if successful\r\n * @returns {Registry} this registry key object\r\n */\r\nRegistry.prototype.create = function create (cb) {\r\n\r\n  if (typeof cb !== 'function')\r\n    throw new TypeError('must specify a callback');\r\n\r\n  var args = ['ADD', this.path, '/f'];\r\n\r\n  pushArch(args, this.arch);\r\n\r\n  var proc = spawn(getRegExePath(), args, {\r\n        cwd: undefined,\r\n        env: process.env,\r\n        stdio: [ 'ignore', 'pipe', 'pipe' ]\r\n      })\r\n  ,   error = null // null means no error previously reported.\r\n\r\n  var output = captureOutput(proc);\r\n\r\n  proc.on('close', function (code) {\r\n    if (error) {\r\n      return;\r\n    } else if (code !== 0) {\r\n      log('process exited with code ' + code);\r\n      cb(mkErrorMsg('ADD', code, output), null);\r\n    } else {\r\n      cb(null);\r\n    }\r\n  });\r\n\r\n  proc.stdout.on('data', function (data) {\r\n    // simply discard output\r\n    log(''+data);\r\n  });\r\n\r\n  proc.on('error', function(err) {\r\n    error = err;\r\n    cb(err);\r\n  });\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Checks if this key already exists.\r\n * @param {function (err, exists)} cb - callback function\r\n * @param {ProcessUncleanExitError=} cb.err - error object or null if successful\r\n * @param {boolean=} cb.exists - true if a registry key with this name already exists\r\n * @returns {Registry} this registry key object\r\n */\r\nRegistry.prototype.keyExists = function keyExists (cb) {\r\n\r\n  this.values(function (err, items) {\r\n    if (err) {\r\n      // process should return with code 1 if key not found\r\n      if (err.code == 1) {\r\n        return cb(null, false);\r\n      }\r\n      // other error\r\n      return cb(err);\r\n    }\r\n    cb(null, true);\r\n  });\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Checks if a value with the given name already exists within this key.\r\n * @param {string} name - the value name, use {@link Registry.DEFAULT_VALUE} or an empty string for the default value\r\n * @param {function (err, exists)} cb - callback function\r\n * @param {ProcessUncleanExitError=} cb.err - error object or null if successful\r\n * @param {boolean=} cb.exists - true if a value with the given name was found in this key\r\n * @returns {Registry} this registry key object\r\n */\r\nRegistry.prototype.valueExists = function valueExists (name, cb) {\r\n\r\n  this.get(name, function (err, item) {\r\n    if (err) {\r\n      // process should return with code 1 if value not found\r\n      if (err.code == 1) {\r\n        return cb(null, false);\r\n      }\r\n      // other error\r\n      return cb(err);\r\n    }\r\n    cb(null, true);\r\n  });\r\n\r\n  return this;\r\n};\r\n\r\nmodule.exports = Registry;\r\n", "import type * as vscode from \"vscode\";\r\n\r\nimport { ShinyUiEditorProvider } from \"./shinyuieditor_extension\";\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n  // Register our custom editor providers\r\n  context.subscriptions.push(ShinyUiEditorProvider.register(context));\r\n}\r\n", "// import { runSUE } from \"@editor/main\";\nimport type { ShinyUiNode } from \"editor\";\n\n// type ShinyUiNode = {\n//   uiName: string;\n//   uiArguments: Record<string, unknown>;\n//   uiChildren?: ShinyUiNode[];\n// };\n\n/**\n * Defines basic information needed to build an app template for the template viewer\n */\nexport type TemplateInfo = {\n  /**\n   * Displayed name of the template in the chooser view\n   */\n  title: string;\n  /** Long form description of the template available on hover. This can use\n   * markdown formatting\n   */\n  description: string;\n  /**\n   * Main tree definining the template. Used for generating preview and also the\n   * main ui definition of the template\n   */\n  uiTree: ShinyUiNode;\n  otherCode: {\n    /**\n     * Extra code that will be copied unchanged above the ui definition\n     */\n    uiExtra?: string;\n\n    /**\n     * List of libraries that need to be loaded in server code\n     */\n    serverLibraries?: string[];\n\n    /**\n     * Extra code that will be copied unchanged above server funtion definition\n     */\n    serverExtra?: string;\n\n    /**\n     * Body of server function. This will be wrapped in the code\n     * `function(input, output){....}`\n     */\n    serverFunctionBody?: string;\n  };\n};\nexport type OutputType = \"single-file\" | \"multi-file\";\n\nexport type TemplateSelection = Omit<TemplateInfo, \"title\" | \"description\"> & {\n  outputType: OutputType;\n};\n\nexport type ParsedAppInfo = {\n  file_lines: string[];\n  loaded_libraries: string[];\n  type: OutputType;\n  ui_bounds: { start: number; end: number };\n  ui_tree: ShinyUiNode;\n};\n\n/**\n * Messages keyed by path that can be sent to the backend\n */\ntype MessageToBackendByPath = {\n  \"READY-FOR-STATE\": null;\n  \"UPDATED-TREE\": ShinyUiNode;\n  \"TEMPLATE-SELECTOR-REQUEST\": null;\n  \"TEMPLATE-SELECTION\": TemplateSelection;\n  \"APP-PREVIEW-REQUEST\": null;\n  \"APP-PREVIEW-RESTART\": null;\n  \"APP-PREVIEW-STOP\": null;\n};\n\n/**\n * All the paths and their payloads that can be received from the backend\n */\nexport type MessageFromBackendByPath = {\n  \"UPDATED-TREE\": ShinyUiNode;\n  \"PARSING-ERROR\": string;\n  \"APP-PREVIEW-STATUS\": \"FAKE-PREVIEW\" | \"LOADING\" | { url: string };\n  \"APP-PREVIEW-CRASH\": string;\n  \"APP-PREVIEW-LOGS\": string[];\n  \"TEMPLATE-CHOOSER\": string;\n};\n\n/**\n * Union form of the backend messages with path and payload pairings for\n * callbacks\n */\nexport type MessageToBackend = MessageUnion<MessageToBackendByPath>;\n/**\n * Union form of the message that can be received from backend\n */\nexport type MessageFromBackend = MessageUnion<MessageFromBackendByPath>;\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return typeof value === \"object\" && value !== null;\n}\nexport function isMessageFromBackend(x: unknown): x is MessageFromBackend {\n  if (!isRecord(x)) return false;\n  return \"path\" in x;\n}\nexport function isMessageFromClient(x: unknown): x is MessageToBackend {\n  if (!isRecord(x)) return false;\n  return \"path\" in x;\n}\n\n// =============================================================================\n// Helper generics to turn our simple message object type into unions that have\n// smart payload slots\ntype PathsWithPayload<\n  MsgObj extends MessageToBackendByPath | MessageFromBackendByPath\n> = {\n  [K in keyof MsgObj]-?: MsgObj[K] extends null ? never : K;\n}[keyof MsgObj];\n\ntype PathsWithoutPayload<\n  MsgObj extends MessageToBackendByPath | MessageFromBackendByPath\n> = {\n  [K in keyof MsgObj]-?: MsgObj[K] extends null ? K : never;\n}[keyof MsgObj];\n\ntype MessageUnion<\n  MsgObj extends MessageToBackendByPath | MessageFromBackendByPath\n> =\n  | {\n      [T in PathsWithPayload<MsgObj>]: {\n        path: T;\n        payload: MsgObj[T];\n      };\n    }[PathsWithPayload<MsgObj>]\n  | {\n      [T in PathsWithoutPayload<MsgObj>]: {\n        path: T;\n      };\n    }[PathsWithoutPayload<MsgObj>];\n", "var functionDebounce = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n\nexport {functionDebounce as default};\n", "/* eslint-disable no-console */\r\nimport type { MessageFromBackend } from \"communication-types\";\r\nimport { isMessageFromClient } from \"communication-types\";\r\nimport type { ShinyUiNode } from \"editor\";\r\nimport debounce from \"just-debounce-it\";\r\nimport * as vscode from \"vscode\";\r\n\r\nimport { generateUpdatedUiCode } from \"./R-Utils/generateUpdatedUiCode\";\r\nimport type { ParsedApp } from \"./R-Utils/parseAppFile\";\r\nimport { getAppFile } from \"./R-Utils/parseAppFile\";\r\nimport type { ActiveRSession } from \"./R-Utils/startBackgroundRProcess\";\r\nimport { startBackgroundRProcess } from \"./R-Utils/startBackgroundRProcess\";\r\nimport { startPreviewApp } from \"./R-Utils/startPreviewApp\";\r\nimport { collapseText } from \"./string-utils\";\r\nimport { getNonce } from \"./util\";\r\n\r\nconst { showErrorMessage } = vscode.window;\r\n\r\n/**\r\n * Provider for custom editor.\r\n *\r\n */\r\nexport class ShinyUiEditorProvider implements vscode.CustomTextEditorProvider {\r\n  private RProcess: ActiveRSession | null = null;\r\n  private uiBounds: ParsedApp[\"ui_bounds\"] | null = null;\r\n\r\n  private static readonly viewType = \"shinyUiEditor.appFile\";\r\n\r\n  private sendMessage: ((msg: MessageFromBackend) => Thenable<boolean>) | null =\r\n    null;\r\n\r\n  public static register(context: vscode.ExtensionContext): vscode.Disposable {\r\n    const provider = new ShinyUiEditorProvider(context);\r\n    const providerRegistration = vscode.window.registerCustomEditorProvider(\r\n      ShinyUiEditorProvider.viewType,\r\n      provider,\r\n      {\r\n        webviewOptions: {\r\n          // Make it so the app stays alive if it's not the main tab, avoids\r\n          // unneccesary refreshes. May be worth removing this in favor of cold\r\n          // startups everytime tab is focused if memory usage etc becomes an\r\n          // issue\r\n          retainContextWhenHidden: true,\r\n        },\r\n      }\r\n    );\r\n    return providerRegistration;\r\n  }\r\n\r\n  constructor(private readonly context: vscode.ExtensionContext) {\r\n    // Spin up background R process for things like formatting code etc.\r\n    startBackgroundRProcess().then((rProc) => {\r\n      this.RProcess = rProc;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Called when an instance of the custom editor is opened.\r\n   *\r\n   * The `document` arg will correspond to the associated app.R or ui.R file for this editor view.\r\n   * By keeping logic in here we will ensure we don't get mixed up when we have multiple editor windows open.\r\n   */\r\n  public async resolveCustomTextEditor(\r\n    document: vscode.TextDocument,\r\n    webviewPanel: vscode.WebviewPanel,\r\n    _token: vscode.CancellationToken\r\n  ): Promise<void> {\r\n    // Setup initial content for the webview\r\n    webviewPanel.webview.options = {\r\n      enableScripts: true,\r\n    };\r\n    webviewPanel.webview.html = this.getHtmlForWebview(webviewPanel.webview);\r\n    let latestAppWrite: string | null = null;\r\n\r\n    const syncFileToClientState = async () => {\r\n      if (!this.RProcess) {\r\n        throw new Error(\r\n          \"Failed to sync file state to client, no R process available\"\r\n        );\r\n      }\r\n\r\n      console.log(\"Generating app state\");\r\n      const appFileText = document.getText();\r\n\r\n      // Check to make sure we're not just picking up a change that we made\r\n      const updateWeMade =\r\n        latestAppWrite !== null && appFileText.includes(latestAppWrite);\r\n      if (updateWeMade) {\r\n        // Skip unneccesary app file parsing\r\n        return;\r\n      }\r\n\r\n      const appFileInfo = await getAppFile(appFileText, this.RProcess);\r\n      if (appFileInfo === \"EMPTY\") {\r\n        this.sendMessage?.({ path: \"TEMPLATE-CHOOSER\", payload: \"please?\" });\r\n      } else {\r\n        const { ui_bounds, ui_tree } = appFileInfo;\r\n\r\n        this.uiBounds = ui_bounds;\r\n        this.sendMessage?.({\r\n          path: \"UPDATED-TREE\",\r\n          payload: ui_tree,\r\n        });\r\n      }\r\n    };\r\n\r\n    const syncFileToClientStateDebounced = debounce(syncFileToClientState, 500);\r\n\r\n    // Helper to check to make sure that a change event such as save or typing\r\n    // is effecting the document we care about\r\n    const isThisDocument = (doc: vscode.TextDocument): boolean => {\r\n      return doc.uri.toString() === document.uri.toString();\r\n    };\r\n\r\n    // Hook up event handlers so that we can synchronize the webview with the text document.\r\n    //\r\n    // The text document acts as our model, so we have to sync change in the document to our\r\n    // editor and sync changes in the editor back to the document.\r\n    //\r\n    const changeDocumentSubscription = vscode.workspace.onDidChangeTextDocument(\r\n      (e) => {\r\n        if (isThisDocument(e.document)) {\r\n          syncFileToClientStateDebounced();\r\n        }\r\n      }\r\n    );\r\n\r\n    const saveDocumentSubscription = vscode.workspace.onDidSaveTextDocument(\r\n      (savedDocument) => {\r\n        if (isThisDocument(savedDocument)) {\r\n          // Make sure to immediately fire any changes to sync on save so there's not a lag.\r\n          syncFileToClientStateDebounced.flush();\r\n        }\r\n      }\r\n    );\r\n\r\n    // Make sure we get rid of the listener when our editor window is closed.\r\n    webviewPanel.onDidDispose(() => {\r\n      changeDocumentSubscription.dispose();\r\n      saveDocumentSubscription.dispose();\r\n      console.log(\"Editor window closed\", document.fileName);\r\n    });\r\n\r\n    const previewAppInfo = startPreviewApp({\r\n      pathToApp: document.fileName,\r\n      onInitiation: () => {\r\n        this.sendMessage?.({\r\n          path: \"APP-PREVIEW-STATUS\",\r\n          payload: \"LOADING\",\r\n        });\r\n      },\r\n      onReady: (url) => {\r\n        this.sendMessage?.({\r\n          path: \"APP-PREVIEW-STATUS\",\r\n          payload: { url },\r\n        });\r\n      },\r\n      onFailToStart: () => {\r\n        this.sendMessage?.({\r\n          path: \"APP-PREVIEW-CRASH\",\r\n          payload: \"Failed to start\",\r\n        });\r\n      },\r\n      onCrash: () => {\r\n        this.sendMessage?.({\r\n          path: \"APP-PREVIEW-CRASH\",\r\n          payload: \"Crashed\",\r\n        });\r\n      },\r\n      onLogs: (logs) => {\r\n        this.sendMessage?.({\r\n          path: \"APP-PREVIEW-LOGS\",\r\n          payload: logs,\r\n        });\r\n      },\r\n    });\r\n\r\n    // Receive message from the webview.\r\n    webviewPanel.webview.onDidReceiveMessage(async (msg) => {\r\n      if (!this.sendMessage) {\r\n        throw new Error(\r\n          \"Can't send message back to client, sendMessage not available.\"\r\n        );\r\n      }\r\n      if (isMessageFromClient(msg)) {\r\n        switch (msg.path) {\r\n          case \"READY-FOR-STATE\":\r\n            syncFileToClientState();\r\n            return;\r\n\r\n          case \"TEMPLATE-SELECTION\": {\r\n            showErrorMessage(\"Have not yet implemented template filling out\");\r\n            return;\r\n          }\r\n\r\n          case \"UPDATED-TREE\": {\r\n            if (!this.RProcess || !this.uiBounds) {\r\n              throw new Error(\r\n                \"No available R Process or ui bounds, can't update UI tree\"\r\n              );\r\n            }\r\n\r\n            const { uiText } = await this.updateAppUI(document, msg.payload);\r\n            latestAppWrite = uiText;\r\n            return;\r\n          }\r\n          case \"APP-PREVIEW-REQUEST\": {\r\n            previewAppInfo.start();\r\n            return;\r\n          }\r\n          case \"APP-PREVIEW-STOP\": {\r\n            previewAppInfo.stop();\r\n            return;\r\n          }\r\n          case \"APP-PREVIEW-RESTART\": {\r\n            previewAppInfo.start();\r\n            return;\r\n          }\r\n          default:\r\n            console.warn(\"Unhandled message from client\", msg);\r\n        }\r\n      } else {\r\n        console.log(\"Unknown message from webview\", msg);\r\n      }\r\n    });\r\n\r\n    this.sendMessage = (msg: MessageFromBackend) =>\r\n      webviewPanel.webview.postMessage(msg);\r\n  }\r\n\r\n  /**\r\n   * Get the static html used for the editor webviews.\r\n   */\r\n  private getHtmlForWebview(webview: vscode.Webview): string {\r\n    // Local path to script and css for the webview\r\n    const scriptUri = webview.asWebviewUri(\r\n      vscode.Uri.joinPath(\r\n        this.context.extensionUri,\r\n        \"media\",\r\n        \"build\",\r\n        \"bundle.js\"\r\n      )\r\n    );\r\n\r\n    const styleMainUri = webview.asWebviewUri(\r\n      vscode.Uri.joinPath(\r\n        this.context.extensionUri,\r\n        \"media\",\r\n        \"build\",\r\n        \"bundle.css\"\r\n      )\r\n    );\r\n\r\n    // Use a nonce to whitelist which scripts can be run\r\n    const nonce = getNonce();\r\n\r\n    const cspSource = webview.cspSource;\r\n    return /* html */ `\r\n\t\t\t<!DOCTYPE html>\r\n\t\t\t<html lang=\"en\">\r\n\t\t\t<head>\r\n\t\t\t\t<meta charset=\"UTF-8\">\r\n\t\t\t\t<script>\r\n\t\t\t\t// This is needed for various older packages that require the global\r\n\t\t\t\t// object to be defined because it typically was with older bundlers like\r\n\t\t\t\t// webpack\r\n\t\t\t\tvar global = window;\r\n\t\t\t  </script>\r\n\t\t\t\t<!--\r\n\t\t\t\tUse a content security policy to only allow loading images from https or from our extension directory,\r\n\t\t\t\tand only allow scripts that have a specific nonce.\r\n\t\t\t\t-->\r\n\t\t\t\t<meta \r\n          http-equiv=\"Content-Security-Policy\" \r\n          content=\"default-src 'none'; frame-src http://localhost:*/ ${cspSource} https:; img-src ${cspSource} data:; style-src ${webview.cspSource} 'unsafe-inline'; script-src 'nonce-${nonce}';\">\r\n\r\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\r\n\t\t\t\t\r\n\t\t\t\t<link href=\"${styleMainUri}\" rel=\"stylesheet\" />\r\n\t\t\t\t\r\n\t\t\t\t<title>Shiny UI Editor</title>\r\n\t\t\t</head>\r\n\t\t\t<body>\r\n\t\t\t\t<noscript>You need to enable JavaScript to run this app.</noscript>\r\n\t\t\t\t<div id=\"root\" style=\"height: 100vh; display: relative\"></div>\r\n\t\t\t\t<script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>\r\n\t\t\t</body>\r\n\t\t\t</html>`;\r\n  }\r\n\r\n  /**\r\n   * Write out new app ui into text document json to a given document.\r\n   */\r\n  private async updateAppUI(\r\n    document: vscode.TextDocument,\r\n    uiTree: ShinyUiNode\r\n  ) {\r\n    if (!this.RProcess) {\r\n      throw new Error(\"Can't access R to build new ui code\");\r\n    }\r\n    if (!this.uiBounds) {\r\n      throw new Error(\"Attempting to update an app that has yet to be parsed.\");\r\n    }\r\n\r\n    const { start, end } = this.uiBounds;\r\n\r\n    const uiCode = await generateUpdatedUiCode(uiTree, this.RProcess);\r\n\r\n    const uiRange = new vscode.Range(start - 1, 0, end, 0);\r\n    const edit = new vscode.WorkspaceEdit();\r\n\r\n    // Replace chunk of app ui\r\n    const newUiText = `ui <- ${collapseText(...uiCode.text)}\\n`;\r\n\r\n    edit.replace(document.uri, uiRange, newUiText);\r\n    await vscode.workspace.applyEdit(edit);\r\n\r\n    // Save so app preview will update\r\n    document.save();\r\n\r\n    // Fix up ui bounds so next change will not mess up app\r\n    const oldUiNumLines = end - start + 1;\r\n    const newUiNumLines = uiCode.text.length;\r\n    const uiNumLinesDiff = newUiNumLines - oldUiNumLines;\r\n    this.uiBounds = {\r\n      start,\r\n      end: end + uiNumLinesDiff,\r\n    };\r\n\r\n    return { uiText: newUiText };\r\n  }\r\n}\r\n", "export function collapseText(...textLines: string[]): string {\n  return textLines.reduce((all, l, i) => (i === 0 ? \"\" : all + \"\\n\") + l, \"\");\n}\nexport function escapeDoubleQuotes(cmd: string): string {\n  return cmd.replace(/\"/g, `\\\\\"`);\n}\n", "import type { ShinyUiNode } from \"editor\";\n\nimport { collapseText, escapeDoubleQuotes } from \"../string-utils\";\n\nimport type { ActiveRSession } from \"./startBackgroundRProcess\";\n\nexport type UpdatedUiCode = {\n  text: string[];\n  namespaces_removed: string[];\n};\nexport async function generateUpdatedUiCode(\n  uiTree: ShinyUiNode,\n  RProc: ActiveRSession\n): Promise<UpdatedUiCode> {\n  const rCommand = buildGeneratingCommand(uiTree);\n\n  try {\n    const generatedUiCode = await RProc.runCmd(rCommand, { verbose: false });\n\n    return JSON.parse(collapseText(...generatedUiCode));\n  } catch (e) {\n    throw new Error(\"Failed to generate new ui code from tree\");\n  }\n}\n\nfunction buildGeneratingCommand(\n  uiTree: ShinyUiNode,\n  removeNamespace: boolean = true\n) {\n  const jsonifiedTree = escapeDoubleQuotes(JSON.stringify(uiTree, null, 2));\n\n  const removeNamespaceArg = removeNamespace ? \"TRUE\" : \"FALSE\";\n  return collapseText(\n    `ui_tree <- jsonlite::fromJSON(`,\n    `  txt = \"${jsonifiedTree}\",`,\n    `  simplifyVector = FALSE`,\n    `)`,\n    `new_ui_code <- shinyuieditor:::ui_tree_to_code(ui_tree, remove_namespace = ${removeNamespaceArg})`,\n    `new_ui_code$text <- as.character(new_ui_code$text)`,\n    `jsonlite::toJSON(new_ui_code, auto_unbox = TRUE)`\n  );\n}\n", "import type { OutputType } from \"communication-types\";\nimport type { ShinyUiNode } from \"editor\";\n\nimport { escapeDoubleQuotes, collapseText } from \"../string-utils\";\n\nimport type { ActiveRSession } from \"./startBackgroundRProcess\";\n\ntype UiBounds = { start: number; end: number };\n\nexport type ParsedApp = {\n  file_lines: string[];\n  loaded_libraries: string[];\n  type: OutputType;\n  ui_bounds: UiBounds;\n  ui_tree: ShinyUiNode;\n};\n\nexport async function getAppFile(\n  fileText: string,\n  RProcess: ActiveRSession\n): Promise<ParsedApp | \"EMPTY\"> {\n  const parseCommand = buildParseCommand(fileText);\n\n  const parsedCommandOutput = await RProcess.runCmd(parseCommand);\n\n  try {\n    const parsedAppInfo = JSON.parse(\n      parsedCommandOutput.reduce((all, l) => all + \"\\n\" + l, \"\")\n    );\n\n    // Nothing will get returned if we've provided an empty file\n    if (Object.keys(parsedAppInfo).length === 0) {\n      return \"EMPTY\";\n    }\n\n    return parsedAppInfo;\n  } catch {\n    throw new Error(\n      \"Could not get document as json. Content is not valid json\"\n    );\n  }\n}\n\nfunction buildParseCommand(appText: string) {\n  const escapedAppText = escapeDoubleQuotes(appText);\n\n  return collapseText(\n    `app_lines <- strsplit(\"${escapedAppText}\", \"\\\\n\")[[1]]`,\n    `jsonlite::toJSON(`,\n    `  shinyuieditor:::get_file_ui_definition_info(app_lines, \"single-file\"),`,\n    `  auto_unbox = TRUE`,\n    `)`\n  );\n}\n", "import type { ChildProcessWithoutNullStreams } from \"child_process\";\n\nimport { sendMsgToProc } from \"./startBackgroundRProcess\";\n\nconst START_SIGNAL = \"SUE_START_SIGNAL\";\nconst END_SIGNAL = \"SUE_END_SIGNAL\";\n\nexport type CommandExecOptions = {\n  timeout_ms?: number;\n  verbose?: boolean;\n};\n\nfunction makeLogger(verbose: boolean, prefix: string) {\n  return (msg: string) => {\n    if (verbose) {\n      // eslint-disable-next-line no-console\n      console.log(prefix + msg);\n    }\n  };\n}\nexport async function runRCommand(\n  rProc: ChildProcessWithoutNullStreams,\n  cmd: string,\n  { timeout_ms = 1000, verbose = false }: CommandExecOptions = {}\n): Promise<string[]> {\n  const logger = makeLogger(verbose, \"runRCommand: \");\n  let logs = \"\";\n\n  let seenNonEmptyOutput = false;\n  let seenStartSignal = false;\n  const lines: string[] = [];\n  return new Promise<string[]>((resolve) => {\n    function listenForOutput(d: any) {\n      const outputLines = d.toString().split(\"\\n\") as string[];\n\n      for (const l of outputLines) {\n        logs += l + \"\\n\";\n        logger(l);\n\n        if (l.includes(START_SIGNAL)) {\n          seenStartSignal = true;\n          continue;\n        }\n\n        if (!seenStartSignal) {\n          continue;\n        }\n\n        if (!seenNonEmptyOutput && l.length === 0) {\n          continue;\n        }\n\n        if (l.includes(END_SIGNAL)) {\n          clearTimeout(startTimeout);\n          resolve(lines);\n          logger(\"Output finished\");\n          rProc.stdout.off(\"data\", listenForOutput);\n          break;\n        }\n\n        // If we're not seeing the start signal or the end signal then we're\n        // looking at the command\n        seenNonEmptyOutput = true;\n        lines.push(l);\n      }\n    }\n    rProc.stdout.on(\"data\", listenForOutput);\n\n    const startTimeout = setTimeout(() => {\n      throw new Error(\n        `Timeout, no response from run command within ${timeout_ms}ms: ${cmd}\\n Logs:\\n ${logs}`\n      );\n    }, timeout_ms);\n\n    sendMsgToProc(\n      `print('${START_SIGNAL}');${cmd};print('${END_SIGNAL}')`,\n      rProc\n    );\n  });\n}\n", "import type { ChildProcessWithoutNullStreams } from \"child_process\";\nimport { spawn } from \"child_process\";\n\nimport { getRpath } from \"./setupRConnection\";\n\nexport type RProcess = {\n  proc: ChildProcessWithoutNullStreams;\n  stop: () => boolean;\n};\n\nexport type RunRCommandOptions = Partial<{\n  onClose: () => void;\n  onError: (e: Error) => void;\n  onStdout: (out: string) => void;\n  onStderr: (out: string) => void;\n  timeout_ms: number;\n  verbose: boolean;\n}>;\n\nexport async function startRProcess(\n  commands: string[],\n  opts: RunRCommandOptions = {}\n) {\n  const pathToR = await getRpath();\n  if (pathToR === undefined) {\n    throw new Error(\"Can't get R path\");\n  }\n  let logs = \"\";\n\n  return new Promise<RProcess>((resolve) => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    const eventLog = (msg: string) =>\n      opts.verbose\n        ? // eslint-disable-next-line no-console\n          console.log(\n            `%c[RProc ${spawnedProcess.pid}] %c${msg\n              .replaceAll(/\\n$/g, \"\")\n              .replaceAll(/\\n/g, \"\\n\\u2219\\u2219\\u2219 \")}`,\n            \"color: orangered;\",\n            \"color: grey; opacity: 0.5\"\n          )\n        : null;\n\n    const spawnedProcess = spawn(pathToR, commands, { signal });\n\n    function gatherLogs(type: \"error\" | \"out\", logMsg: string) {\n      logs += `${type}: ${logMsg}`;\n    }\n\n    const onSpawn = () => {\n      eventLog(`spawned`);\n      clearTimeout(startTimeout);\n      resolve({ proc: spawnedProcess, stop });\n    };\n\n    const onError = (d: Error) => {\n      eventLog(`Error: \\n${d.toString()}`);\n      clearTimeout(startTimeout);\n      opts.onError?.(d);\n    };\n\n    const onClose = () => {\n      eventLog(`Closed`);\n      clearTimeout(startTimeout);\n      opts.onClose?.();\n    };\n\n    const onStdout = (d: any) => {\n      const msg = d.toString();\n      eventLog(`stdout: \\n${msg}`);\n      gatherLogs(\"out\", msg);\n      opts.onStdout?.(msg);\n    };\n\n    const onStderr = (d: any) => {\n      const msg = d.toString();\n      eventLog(`stderr: ${msg}`);\n      gatherLogs(\"error\", msg);\n      opts.onStderr?.(msg);\n    };\n\n    spawnedProcess.on(\"spawn\", onSpawn);\n    spawnedProcess.on(\"error\", onError);\n    spawnedProcess.on(\"close\", onClose);\n    spawnedProcess.stdout.on(\"data\", onStdout);\n    spawnedProcess.stderr.on(\"data\", onStderr);\n\n    const stop = () => {\n      // Process never started\n      if (!spawnedProcess.pid) {\n        return true;\n      }\n\n      eventLog(`Killing R process ${spawnedProcess.pid}`);\n\n      // Unlisten event listeners\n      spawnedProcess.off(\"spawn\", onSpawn);\n      spawnedProcess.off(\"error\", onError);\n      spawnedProcess.off(\"close\", onClose);\n      spawnedProcess.stdout.off(\"data\", onStdout);\n      spawnedProcess.stderr.off(\"data\", onStderr);\n\n      return process.kill(spawnedProcess.pid);\n    };\n    // Start a timeout to call off the test if we fail to detect the server\n    // startup message. This could happen if the log format is changed etc.\n    const startTimeout = setTimeout(() => {\n      throw new Error(\"Starting backend server failed.\\n Logs:\\n\" + logs);\n    }, opts.timeout_ms ?? 5000);\n  });\n}\n", "import { existsSync } from \"fs\";\nimport path from \"path\";\n\nimport * as vscode from \"vscode\";\nimport winreg = require(\"winreg\");\n\nexport function config(): vscode.WorkspaceConfiguration {\n  return vscode.workspace.getConfiguration(\"r\");\n}\n\nfunction getRfromEnvPath(platform: string) {\n  let splitChar = \":\";\n  let fileExtension = \"\";\n\n  if (platform === \"win32\") {\n    splitChar = \";\";\n    fileExtension = \".exe\";\n  }\n\n  const os_paths: string[] | string = process.env.PATH\n    ? process.env.PATH.split(splitChar)\n    : [];\n  for (const os_path of os_paths) {\n    const os_r_path: string = path.join(os_path, \"R\" + fileExtension);\n    if (existsSync(os_r_path)) {\n      return os_r_path;\n    }\n  }\n  return \"\";\n}\n\nexport async function getRpathFromSystem(): Promise<string> {\n  let rpath = \"\";\n  const platform: string = process.platform;\n\n  rpath ||= getRfromEnvPath(platform);\n\n  if (!rpath && platform === \"win32\") {\n    // Find path from registry\n    try {\n      const key = new winreg({\n        hive: winreg.HKLM,\n        key: \"\\\\Software\\\\R-Core\\\\R\",\n      });\n      const item: winreg.RegistryItem = await new Promise((c, e) =>\n        key.get(\"InstallPath\", (err, result) =>\n          err === null ? c(result) : e(err)\n        )\n      );\n      rpath = path.join(item.value, \"bin\", \"R.exe\");\n    } catch (e) {\n      rpath = \"\";\n    }\n  }\n\n  return rpath;\n}\n\nexport function getRPathConfigEntry(term = false): string {\n  const trunc = term ? \"rterm\" : \"rpath\";\n  const platform =\n    process.platform === \"win32\"\n      ? \"windows\"\n      : process.platform === \"darwin\"\n      ? \"mac\"\n      : \"linux\";\n  return `${trunc}.${platform}`;\n}\n\nexport async function getRpath(\n  quote = false,\n  overwriteConfig?: string\n): Promise<string | undefined> {\n  let rpath: string | undefined = \"\";\n\n  // try the config entry specified in the function arg:\n  if (overwriteConfig) {\n    rpath = config().get<string>(overwriteConfig);\n  }\n\n  // try the os-specific config entry for the rpath:\n  const configEntry = getRPathConfigEntry();\n  rpath ||= config().get<string>(configEntry);\n\n  // read from path/registry:\n  rpath ||= await getRpathFromSystem();\n\n  // represent all invalid paths (undefined, '', null) as undefined:\n  rpath ||= undefined;\n\n  if (!rpath) {\n    // inform user about missing R path:\n    void vscode.window.showErrorMessage(\n      `Cannot find R to use for help, package installation etc. Change setting r.${configEntry} to R path.`\n    );\n  } else if (quote && /^[^'\"].* .*[^'\"]$/.exec(rpath)) {\n    // if requested and rpath contains spaces, add quotes:\n    rpath = `\"${rpath}\"`;\n  } else if (!quote) {\n    rpath = rpath.replace(/^\"(.*)\"$/, \"$1\");\n    rpath = rpath.replace(/^'(.*)'$/, \"$1\");\n  } else if (process.platform === \"win32\" && /^'.* .*'$/.exec(rpath)) {\n    // replace single quotes with double quotes on windows\n    rpath = rpath.replace(/^'(.*)'$/, '\"$1\"');\n  }\n\n  return rpath;\n}\n", "import type { ChildProcessWithoutNullStreams } from \"child_process\";\n\nimport type { CommandExecOptions } from \"./runRCommand\";\nimport { runRCommand } from \"./runRCommand\";\nimport { startRProcess } from \"./startRProcess\";\n\nexport type ActiveRSession = {\n  proc: ChildProcessWithoutNullStreams;\n  runCmd: (cmd: string, opts?: CommandExecOptions) => Promise<string[]>;\n  stop: () => void;\n};\n\nexport async function startBackgroundRProcess(): Promise<ActiveRSession | null> {\n  const rProc = await startRProcess(\n    [\"--silent\", \"--slave\", \"--no-save\", \"--no-restore\"],\n    { timeout_ms: 5000 }\n  );\n\n  console.log(\"R Process is active! Loading shinyuieditor library.\");\n  sendMsgToProc(`library(shinyuieditor)`, rProc.proc);\n\n  return {\n    ...rProc,\n    runCmd: (cmd: string, opts?: CommandExecOptions) =>\n      runRCommand(rProc.proc, cmd, opts),\n  };\n}\n\nexport function sendMsgToProc(\n  msg: string,\n  proc: ChildProcessWithoutNullStreams\n) {\n  proc.stdin.write(`${msg}\\n`);\n}\n", "import path from \"path\";\n\nimport * as vscode from \"vscode\";\n\nimport { collapseText } from \"../string-utils\";\n\nimport { getFreePort } from \"./getFreePort\";\nimport type { RProcess } from \"./startRProcess\";\nimport { startRProcess } from \"./startRProcess\";\n\nexport type PreviewAppInfo = {\n  start: () => Promise<boolean>;\n  stop: () => boolean;\n};\n\nexport function startPreviewApp({\n  pathToApp,\n  onCrash,\n  onInitiation,\n  onReady,\n  onFailToStart,\n  onLogs,\n}: {\n  pathToApp: string;\n  onInitiation: () => void;\n  onReady: (url: string) => void;\n  onFailToStart: () => void;\n  onCrash: () => void;\n  onLogs: (logs: string[]) => void;\n}): PreviewAppInfo {\n  const host = \"0.0.0.0\";\n  const appDir = path.parse(pathToApp).dir;\n\n  let appProcess: RProcess | null = null;\n\n  async function startApp() {\n    onInitiation();\n\n    // If there is an existing app process and it can still have messages\n    // communicated with it, we need to kill it Restarting existing app\n    // process.\n    stopApp();\n\n    try {\n      const port = await getFreePort();\n\n      const previewAppUri = await vscode.env.asExternalUri(\n        vscode.Uri.parse(`http://localhost:${port}`)\n      );\n\n      // Build a regex that watches for the app's location\n      const readyToGoRegex = new RegExp(`listening on .+${port}`, \"i\");\n\n      const appStartupCommand = collapseText(\n        `options(shiny.autoreload = TRUE)`,\n        `shiny::runApp(appDir = \"${appDir}\", port = ${port}, host = \"${host}\")`\n      );\n\n      appProcess = await startRProcess(\n        [\"--no-save\", \"--no-restore\", \"--silent\", \"-e\", appStartupCommand],\n        {\n          onStderr(msg) {\n            if (readyToGoRegex.test(msg)) {\n              onReady(previewAppUri.toString());\n            }\n            onLogs(msg.split(\"\\n\"));\n          },\n          onClose: onCrash,\n          onError: onCrash,\n        }\n      );\n\n      return true;\n    } catch {\n      onFailToStart();\n      return false;\n    }\n  }\n\n  function stopApp() {\n    if (appProcess === null) {\n      // No app to stop running...\n      return true;\n    }\n\n    return appProcess.stop();\n  }\n\n  return {\n    start: startApp,\n    stop: stopApp,\n  };\n}\n", "import net from \"net\";\n\nexport async function getFreePort(): Promise<number> {\n  return new Promise((res) => {\n    const srv = net.createServer();\n    srv.listen(0, () => {\n      const serverAddress = srv.address?.();\n      if (typeof serverAddress === \"string\" || serverAddress === null) {\n        throw new Error(\"Failed to find a free port...\");\n      }\n\n      srv.close((err) => res(serverAddress.port));\n    });\n  });\n}\n", "export function getNonce() {\r\n  let text = \"\";\r\n  const possible =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  for (let i = 0; i < 32; i++) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return text;\r\n}\r\n"],
  "mappings": "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",
  "names": ["module", "path", "spawn", "name", "vscode", "path", "_a", "import_path", "vscode", "net", "path"]
}
