.container {
  position: relative;
  height: 100%;
  width: 100%;
  /* Stop blowout and enable properties like padding to be used as expected */
  min-width: 0;
  background-color: var(--rstudio-white, white);
  /* outline: var(--outline); */
  --card-padding: 6px;
  isolation: isolate;
}

.container.withTitle {
  display: grid;
  grid-template-areas:
    "title"
    "contentHolder";
  /* When there's no title the column will dissapear */
  grid-template-rows: min-content minmax(0, 1fr);
}

.panelTitle {
  grid-area: title;
  padding: var(--card-padding) calc(var(--card-padding) * 1.5);
}

.contentHolder {
  grid-area: contentHolder;
  /* We dont actually need the gap to be used for the gap property as the drop
  watchers accomplish the spacing for us */
  --spacing: var(--item-gap, 1rem);
  position: relative;
  height: 100%;
  width: 100%;
  /* Stop blowout and enable properties like padding to be used as expected */
  min-width: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: var(--card-padding);
  overflow: auto;
}

.contentHolder[data-alignment="top"] {
  justify-content: top;
}
.contentHolder[data-alignment="center"] {
  justify-content: center;
}
.contentHolder[data-alignment="spread"] {
  justify-content: space-evenly;
}
.contentHolder[data-alignment="bottom"] {
  justify-content: end;
}

/* This is here so the things that need to know where their parent exists work
with the children nodes. Otherwise we'd rely on every child settings position
relative themselves */
.contentHolder > div {
  position: relative;
}

/* Setup expansion of the drag watching divs based on the alignment type */

/* By default the drop watcher is just the height of the spacing between the
elements */
div.dropWatcher {
  height: var(--spacing);
  width: 100%;
  /* Make sure these guys sit above other so they can access the drop events */
  z-index: 2;
}

/* When in the top alignment mode only the final watcher needs to expand */
.contentHolder[data-alignment="top"] > div.lastDropWatcher,

/* In the bottom alignment just the first watcher needs to expand */
.contentHolder[data-alignment="bottom"] > div.firstDropWatcher,

/* Center alignment means both top and bottom need to expand */
.contentHolder[data-alignment="center"] > div.firstDropWatcher,
.contentHolder[data-alignment="center"] > div.lastDropWatcher,

/* When in spread mode the drop watchers fill the entire space. This actually
makes the justify-content property not neccesary but we'll keep it incase we
change how we do this in the future. */
.contentHolder[data-alignment="spread"] > div.lastDropWatcher,
.contentHolder[data-alignment="spread"] > div.firstDropWatcher,
.contentHolder[data-alignment="spread"] > div.middleDropWatcher,

/* When the panel is entirely empty and the drop watcher is present then let it
take up the whole space */
div.onlyDropWatcher {
  flex-grow: 1;
  height: unset;
}

.hoveringOverSwap,
.availableToSwap {
  --highlight-color: var(--rstudio-blue, pink);
}

div.hoveringOverSwap::after {
  content: "Swap positions";
  position: absolute;
  background-color: var(--highlight-color);
  color: var(--rstudio-white);
  bottom: 100%;
  inset-inline: 20px;
  z-index: 2;
  text-align: center;
  padding-block: 4px;
}

div.availableToSwap {
  --outline-start-width: 2px;
  --outline-end-width: 5px;
  --start-shadow: inset 0px 0 0px var(--outline-start-width)
    var(--highlight-color);
  --end-shadow: inset 0px 0 0px var(--outline-end-width) var(--highlight-color);

  box-shadow: var(--start-shadow);
  animation-duration: 3s;
  animation-name: pulse;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

@keyframes pulse {
  from {
    box-shadow: var(--start-shadow);
  }

  50% {
    box-shadow: var(--end-shadow);
  }
  to {
    box-shadow: var(--start-shadow);
  }
}

/* Small message that shows up when a card is empty to allow easy deletion */
div.emptyGridCard {
  position: absolute;
  inset: 0;
  display: grid;
  place-content: center;
  justify-items: center;
  gap: var(--vertical-spacing);
  /* Needs to sit above the select-by-clicking watcher */
  z-index: 2;
  /* Don't let the panel swallow initial drag over event for drop watcher */
  pointer-events: none;
}
div.emptyGridCard > button {
  /* Re-enable pointer events so the button actually works */
  pointer-events: initial;
}

.emptyMessage {
  font-style: italic;
  opacity: 0.5;
}
